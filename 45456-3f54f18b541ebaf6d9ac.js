"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[45456],{45456:function(t,e,n){n.r(e),n.d(e,{default:function(){return b}});var i=n(11504),o=n(69788),r=n(32648),a=["components"];function l(){return l=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},l.apply(this,arguments)}function d(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c={};function s(t){var e=t.components,n=d(t,a);return(0,o.mdx)("wrapper",l({},c,n,{components:e,mdxType:"MDXLayout"}),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport DataGrid from 'terra-clinical-data-grid';\nimport classNames from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport ContentCellLayout from './ContentCellLayout';\nimport styles from './Datagrid.module.scss';\n\nconst cx = classNames.bind(styles);\nconst grid1 = 'Grid1';\nconst grid2 = 'Grid2';\n\nclass MultipleDatagrids extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buildSection = this.buildSection.bind(this);\n    this.buildRows = this.buildRows.bind(this);\n\n    this.state = {\n      gridData: {\n        [grid1]: {\n          sortedColumnId: 'Column-0',\n          sortedColumnDirection: 'ascending',\n          selectedRow: undefined,\n          selectedCell: undefined,\n          columnHighlightId: 'Column-1',\n          collapsedSectionList: [],\n          columns: {\n            'Column-0': {\n              id: 'Column-0',\n              width: 200,\n              text: 'Grid 1 Column 0',\n              isSelectable: true,\n              sortIndicator: 'ascending',\n              isResizable: true,\n            },\n            'Column-1': {\n              id: 'Column-1',\n              width: 200,\n              text: 'Grid 1 Column 1',\n              isSelectable: true,\n              isResizable: true,\n            },\n            'Column-2': {\n              id: 'Column-2',\n              width: 200,\n              text: 'Grid 1 Column 2',\n              isSelectable: true,\n              isResizable: true,\n            },\n            'Column-3': {\n              id: 'Column-3',\n              width: 200,\n              text: 'Grid 1 Column 3',\n              isSelectable: true,\n              isResizable: true,\n            },\n          },\n        },\n        [grid2]: {\n          sortedColumnId: 'Column-0',\n          sortedColumnDirection: 'descending',\n          selectedRow: undefined,\n          selectedCell: undefined,\n          columnHighlightId: 'Column-0',\n          collapsedSectionList: [],\n          columns: {\n            'Column-0': {\n              id: 'Column-0',\n              width: 200,\n              text: 'Column 0',\n              isSelectable: true,\n              sortIndicator: 'descending',\n              isResizable: true,\n            },\n            'Column-1': {\n              id: 'Column-1',\n              width: 200,\n              text: 'Column 1',\n              isSelectable: true,\n              isResizable: true,\n            },\n            'Column-2': {\n              id: 'Column-2',\n              width: 200,\n              text: 'Column 2',\n              isSelectable: true,\n              isResizable: true,\n            },\n            'Column-3': {\n              id: 'Column-3',\n              width: 200,\n              text: 'Column 3',\n              isSelectable: true,\n              isResizable: true,\n            },\n          },\n        },\n      },\n    };\n  }\n\n  buildRows(gridId, sectionId, numOfRows) {\n    const gridData = this.state.gridData[gridId];\n    const rows = (new Array(numOfRows)).fill().map((rowVal, rowIndex) => ({\n      id: `Row-${rowIndex}`,\n      isSelectable: true,\n      isSelected: gridData.selectedRow && gridData.selectedRow.sectionId === sectionId && gridData.selectedRow.rowId === `Row-${rowIndex}`,\n      cells: ((new Array(4).fill(0)).map((cellVal, cellIndex) => (Object.values(gridData.columns)[cellIndex].id))).map((columnKey) => ({\n        columnId: columnKey,\n        isSelectable: true,\n        isSelected: gridData.selectedCell && gridData.selectedCell.sectionId === sectionId && gridData.selectedCell.rowId === `Row-${rowIndex}` && gridData.selectedCell.columnId === columnKey,\n        component: <ContentCellLayout text={`Row-${rowIndex}, ${columnKey}`} />,\n      })),\n    }));\n\n    return gridData.sortedColumnId && gridData.sortedColumnDirection === 'ascending' ? rows : rows.reverse();\n  }\n\n  buildSection(gridId, sectionId, sectionName, numberOfRows) {\n    return {\n      id: sectionId,\n      text: sectionName,\n      isCollapsible: true,\n      isCollapsed: this.state.gridData[gridId].collapsedSectionList.includes(sectionId),\n      rows: this.buildRows(gridId, sectionId, numberOfRows),\n    };\n  }\n\n  render() {\n    const { gridData } = this.state;\n    const theme = this.context;\n    return (\n      <div>\n        <div className={cx('data-grid-small')}>\n          <DataGrid\n            id={grid1}\n            pinnedColumns={[\n              gridData[grid1].columns['Column-0'],\n              gridData[grid1].columns['Column-1'],\n            ]}\n            overflowColumns={[\n              gridData[grid1].columns['Column-2'],\n              gridData[grid1].columns['Column-3'],\n            ]}\n            columnHighlightId={gridData[grid1].columnHighlightId}\n            sections={[\n              this.buildSection(grid1, 'Grid-1-Section-0', 'Grid 1 Section 0', 4),\n              this.buildSection(grid1, 'Grid-1-Section-1', 'Grid 1 Section 1', 4),\n            ]}\n            fill\n            onColumnSelect={(columnId) => {\n              const newColumns = {};\n              const myGridData = this.state.gridData[grid1];\n\n              const columnToSort = { ...Object.values(myGridData.columns).find(element => element.id === columnId) };\n              columnToSort.sortIndicator = columnToSort.sortIndicator === 'ascending' ? 'descending' : 'ascending';\n              newColumns[`${columnId}`] = columnToSort;\n\n              if (columnId !== myGridData.sortedColumnId) {\n                const previouslySortedColumn = { ...Object.values(myGridData.columns).find(element => element.id === myGridData.sortedColumnId) };\n                if (previouslySortedColumn) {\n                  previouslySortedColumn.sortIndicator = undefined;\n                  newColumns[`${myGridData.sortedColumnId}`] = previouslySortedColumn;\n                }\n              }\n              this.setState(prevState => {\n                const changedData = {\n                  sortedColumnId: columnId,\n                  sortedColumnDirection: columnToSort.sortIndicator,\n                  columns: { ...prevState.gridData[grid1].columns, ...newColumns },\n                };\n                return { gridData: { ...prevState.gridData, ...{ [grid1]: { ...prevState.gridData[grid1], ...changedData } } } };\n              });\n            }}\n            onCellSelect={(sectionId, rowId, columnId) => {\n              this.setState((prevState) => {\n                const gridWithSelectedCell = { [grid1]: { ...prevState.gridData[grid1], ...{ selectedRow: undefined, selectedCell: { sectionId, rowId, columnId } } } };\n                return { gridData: { ...prevState.gridData, ...gridWithSelectedCell } };\n              });\n            }}\n            hasSelectableRows\n            onRowSelect={(sectionId, rowId) => {\n              this.setState((prevState) => {\n                const gridWithSelectedRow = { [grid1]: { ...prevState.gridData[grid1], ...{ selectedRow: { sectionId, rowId }, selectedCell: undefined } } };\n                return { gridData: { ...prevState.gridData, ...gridWithSelectedRow } };\n              });\n            }}\n            onRequestSectionCollapse={(sectionId) => {\n              const index = this.state.gridData[grid1].collapsedSectionList.findIndex(id => sectionId === id);\n              if (index !== -1) {\n                this.setState(prevState => {\n                  const gridWithSectionCollapse = { [grid1]: { ...prevState.gridData[grid1], ...{ collapsedSectionList: prevState.gridData[grid1].collapsedSectionList.filter(id => sectionId !== id) } } };\n                  return { gridData: { ...prevState.gridData, ...gridWithSectionCollapse } };\n                });\n              } else {\n                this.setState(prevState => {\n                  const gridWithSectionCollapse = { [grid1]: { ...prevState.gridData[grid1], ...{ collapsedSectionList: [...prevState.gridData[grid1].collapsedSectionList, sectionId] } } };\n                  return { gridData: { ...prevState.gridData, ...gridWithSectionCollapse } };\n                });\n              }\n            }}\n            rowHeight={theme.className === 'orion-fusion-theme' ? '2.2rem' : undefined}\n            hasResizableColumns\n            onRequestColumnResize={(columnId, width) => {\n              const newColumns = {};\n              const myGridData = this.state.gridData[grid1];\n              const columnToUpdate = { ...Object.values(myGridData.columns).find(element => element.id === columnId) };\n              columnToUpdate.width = Math.max(width, 50);\n              newColumns[`${columnId}`] = columnToUpdate;\n              this.setState(prevState => {\n                const changedData = { columns: { ...prevState.gridData[grid1].columns, ...newColumns } };\n                return { gridData: { ...prevState.gridData, ...{ [grid1]: { ...prevState.gridData[grid1], ...changedData } } } };\n              });\n            }}\n          />\n        </div>\n\n        <div className={cx('data-grid-basic')}>\n          <DataGrid\n            id={grid2}\n            pinnedColumns={[\n              gridData[grid2].columns['Column-0'],\n              gridData[grid2].columns['Column-1'],\n            ]}\n            overflowColumns={[\n              gridData[grid2].columns['Column-2'],\n            ]}\n            columnHighlightId={gridData[grid2].columnHighlightId}\n            sections={[\n              this.buildSection(grid2, 'Grid-2-Section-0', 'Grid 2 Section 0', 4),\n              this.buildSection(grid2, 'Grid-2-Section-1', 'Grid 2 Section 1', 4),\n            ]}\n            fill\n            onColumnSelect={(columnId) => {\n              const newColumns = {};\n              const myGridData = this.state.gridData[grid2];\n\n              const columnToSort = { ...Object.values(myGridData.columns).find(element => element.id === columnId) };\n              columnToSort.sortIndicator = columnToSort.sortIndicator === 'ascending' ? 'descending' : 'ascending';\n              newColumns[`${columnId}`] = columnToSort;\n\n              if (columnId !== myGridData.sortedColumnId) {\n                const previouslySortedColumn = { ...Object.values(myGridData.columns).find(element => element.id === myGridData.sortedColumnId) };\n                if (previouslySortedColumn) {\n                  previouslySortedColumn.sortIndicator = undefined;\n                  newColumns[`${myGridData.sortedColumnId}`] = previouslySortedColumn;\n                }\n              }\n              this.setState(prevState => {\n                const changedData = {\n                  sortedColumnId: columnId,\n                  sortedColumnDirection: columnToSort.sortIndicator,\n                  columns: { ...prevState.gridData[grid2].columns, ...newColumns },\n                };\n                return { gridData: { ...prevState.gridData, ...{ [grid2]: { ...prevState.gridData[grid2], ...changedData } } } };\n              });\n            }}\n            onCellSelect={(sectionId, rowId, columnId) => {\n              this.setState((prevState) => {\n                const gridWithSelectedCell = { [grid2]: { ...prevState.gridData[grid2], ...{ selectedRow: undefined, selectedCell: { sectionId, rowId, columnId } } } };\n                return { gridData: { ...prevState.gridData, ...gridWithSelectedCell } };\n              });\n            }}\n            hasSelectableRows\n            onRowSelect={(sectionId, rowId) => {\n              this.setState((prevState) => {\n                const gridWithSelectedRow = { [grid2]: { ...prevState.gridData[grid2], ...{ selectedRow: { sectionId, rowId }, selectedCell: undefined } } };\n                return { gridData: { ...prevState.gridData, ...gridWithSelectedRow } };\n              });\n            }}\n            onRequestSectionCollapse={(sectionId) => {\n              const index = this.state.gridData[grid2].collapsedSectionList.findIndex(id => sectionId === id);\n              if (index !== -1) {\n                this.setState(prevState => {\n                  const gridWithSectionCollapse = { [grid2]: { ...prevState.gridData[grid2], ...{ collapsedSectionList: prevState.gridData[grid2].collapsedSectionList.filter(id => sectionId !== id) } } };\n                  return { gridData: { ...prevState.gridData, ...gridWithSectionCollapse } };\n                });\n              } else {\n                this.setState(prevState => {\n                  const gridWithSectionCollapse = { [grid2]: { ...prevState.gridData[grid2], ...{ collapsedSectionList: [...prevState.gridData[grid2].collapsedSectionList, sectionId] } } };\n                  return { gridData: { ...prevState.gridData, ...gridWithSectionCollapse } };\n                });\n              }\n            }}\n            rowHeight={theme.className === 'orion-fusion-theme' ? '2.2rem' : undefined}\n            hasResizableColumns\n            onRequestColumnResize={(columnId, width) => {\n              const newColumns = {};\n              const myGridData = this.state.gridData[grid2];\n              const columnToUpdate = { ...Object.values(myGridData.columns).find(element => element.id === columnId) };\n              columnToUpdate.width = Math.max(width, 50);\n              newColumns[`${columnId}`] = columnToUpdate;\n              this.setState(prevState => {\n                const changedData = { columns: { ...prevState.gridData[grid2].columns, ...newColumns } };\n                return { gridData: { ...prevState.gridData, ...{ [grid2]: { ...prevState.gridData[grid2], ...changedData } } } };\n              });\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nMultipleDatagrids.contextType = ThemeContext;\n\nexport default MultipleDatagrids;\n\n")))}s.isMDXComponent=!0;var u=n(33792),m=n(75816),g=function(t){var e=t.title,n=t.description,o=t.isExpanded;return i.createElement(u.c,{title:e||"Multiple Datagrids",description:n,example:i.createElement(r.c,null),exampleCssSrc:i.createElement(m.c,null),exampleSrc:i.createElement(s,null),isExpanded:o})},f=["components"];function p(){return p=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},p.apply(this,arguments)}function S(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var C={},h="wrapper";function b(t){var e=t.components,n=S(t,f);return(0,o.mdx)(h,p({},C,n,{components:e,mdxType:"MDXLayout"}),(0,o.mdx)(g,{description:"This example features usage of multiple datagrids on a single page. ",mdxType:"MultipleDatagrids"}))}b.isMDXComponent=!0},75816:function(t,e,n){n.d(e,{c:function(){return c}});n(11504);var i=n(69788),o=["components"];function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r.apply(this,arguments)}function a(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l={},d="wrapper";function c(t){var e=t.components,n=a(t,o);return(0,i.mdx)(d,r({},l,n,{components:e,mdxType:"MDXLayout"}),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-scss"},":local {\n  .data-grid-basic {\n    height: 800px;\n  }\n\n  .data-grid-small {\n    height: 400px;\n  }\n\n  .data-grid-row-style {\n    height: 100%;\n    width: 100%;\n  }\n\n  .data-grid-paging {\n    height: 800px;\n    position: relative;\n  }\n  \n  .loading-overlay {\n    top: 0;\n  }\n\n  .spacer-right-medium {\n    margin-right: 0.7142857143rem;\n  }\n}\n\n\n")))}c.isMDXComponent=!0},70328:function(t,e,n){n.r(e),e.default={"clinical-lowlight-theme":"ContentCellLayout__clinical-lowlight-theme___lXNvX","orion-fusion-theme":"ContentCellLayout__orion-fusion-theme___+BKr4","content-cell":"ContentCellLayout__content-cell___wgtdc"}},6936:function(t,e,n){n.r(e),e.default={"data-grid-basic":"Datagrid-module__data-grid-basic___HxAKd","data-grid-small":"Datagrid-module__data-grid-small___WpwC9","data-grid-row-style":"Datagrid-module__data-grid-row-style___oGa6Y","data-grid-paging":"Datagrid-module__data-grid-paging___cjRSA","loading-overlay":"Datagrid-module__loading-overlay___O3A7H","spacer-right-medium":"Datagrid-module__spacer-right-medium___7mFBr"}},52916:function(t,e,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var i=d(n(11504)),o=d(n(3268)),r=d(n(74824)),a=d(n(99640)),l=d(n(70328));function d(t){return t&&t.__esModule?t:{default:t}}var c=r.default.bind(l.default),s={text:o.default.string},u=function(t){var e=t.text,n=i.default.useContext(a.default);return i.default.createElement("div",{className:c(["content-cell",n.className])},e)};u.contextType=a.default,u.propTypes=s;e.default=u},32648:function(t,e,n){function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}e.c=void 0;var o=s(n(11504)),r=s(n(49651)),a=s(n(74824)),l=s(n(99640)),d=s(n(52916)),c=s(n(6936));function s(t){return t&&t.__esModule?t:{default:t}}function u(t){return function(t){if(Array.isArray(t))return m(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return m(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return m(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function f(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach((function(e){p(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e,n){return(e=C(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function S(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,C(i.key),i)}}function C(t){var e=function(t,e){if("object"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e||"default");if("object"!==i(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===i(e)?e:String(e)}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function b(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=D(t);if(e){var r=D(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return function(t,e){if(e&&("object"===i(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return v(t)}(this,n)}}function v(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function D(t){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},D(t)}var w=a.default.bind(c.default),y="Grid1",I="Grid2",O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}(l,t);var e,n,i,a=b(l);function l(t){var e,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,l),(n=a.call(this,t)).buildSection=n.buildSection.bind(v(n)),n.buildRows=n.buildRows.bind(v(n)),n.state={gridData:(e={},p(e,y,{sortedColumnId:"Column-0",sortedColumnDirection:"ascending",selectedRow:void 0,selectedCell:void 0,columnHighlightId:"Column-1",collapsedSectionList:[],columns:{"Column-0":{id:"Column-0",width:200,text:"Grid 1 Column 0",isSelectable:!0,sortIndicator:"ascending",isResizable:!0},"Column-1":{id:"Column-1",width:200,text:"Grid 1 Column 1",isSelectable:!0,isResizable:!0},"Column-2":{id:"Column-2",width:200,text:"Grid 1 Column 2",isSelectable:!0,isResizable:!0},"Column-3":{id:"Column-3",width:200,text:"Grid 1 Column 3",isSelectable:!0,isResizable:!0}}}),p(e,I,{sortedColumnId:"Column-0",sortedColumnDirection:"descending",selectedRow:void 0,selectedCell:void 0,columnHighlightId:"Column-0",collapsedSectionList:[],columns:{"Column-0":{id:"Column-0",width:200,text:"Column 0",isSelectable:!0,sortIndicator:"descending",isResizable:!0},"Column-1":{id:"Column-1",width:200,text:"Column 1",isSelectable:!0,isResizable:!0},"Column-2":{id:"Column-2",width:200,text:"Column 2",isSelectable:!0,isResizable:!0},"Column-3":{id:"Column-3",width:200,text:"Column 3",isSelectable:!0,isResizable:!0}}}),e)},n}return e=l,(n=[{key:"buildRows",value:function(t,e,n){var i=this.state.gridData[t],r=new Array(n).fill().map((function(t,n){return{id:"Row-".concat(n),isSelectable:!0,isSelected:i.selectedRow&&i.selectedRow.sectionId===e&&i.selectedRow.rowId==="Row-".concat(n),cells:new Array(4).fill(0).map((function(t,e){return Object.values(i.columns)[e].id})).map((function(t){return{columnId:t,isSelectable:!0,isSelected:i.selectedCell&&i.selectedCell.sectionId===e&&i.selectedCell.rowId==="Row-".concat(n)&&i.selectedCell.columnId===t,component:o.default.createElement(d.default,{text:"Row-".concat(n,", ").concat(t)})}}))}}));return i.sortedColumnId&&"ascending"===i.sortedColumnDirection?r:r.reverse()}},{key:"buildSection",value:function(t,e,n,i){return{id:e,text:n,isCollapsible:!0,isCollapsed:this.state.gridData[t].collapsedSectionList.includes(e),rows:this.buildRows(t,e,i)}}},{key:"render",value:function(){var t=this,e=this.state.gridData,n=this.context;return o.default.createElement("div",null,o.default.createElement("div",{className:w("data-grid-small")},o.default.createElement(r.default,{id:y,pinnedColumns:[e[y].columns["Column-0"],e[y].columns["Column-1"]],overflowColumns:[e[y].columns["Column-2"],e[y].columns["Column-3"]],columnHighlightId:e[y].columnHighlightId,sections:[this.buildSection(y,"Grid-1-Section-0","Grid 1 Section 0",4),this.buildSection(y,"Grid-1-Section-1","Grid 1 Section 1",4)],fill:!0,onColumnSelect:function(e){var n={},i=t.state.gridData[y],o=f({},Object.values(i.columns).find((function(t){return t.id===e})));if(o.sortIndicator="ascending"===o.sortIndicator?"descending":"ascending",n["".concat(e)]=o,e!==i.sortedColumnId){var r=f({},Object.values(i.columns).find((function(t){return t.id===i.sortedColumnId})));r&&(r.sortIndicator=void 0,n["".concat(i.sortedColumnId)]=r)}t.setState((function(t){var i={sortedColumnId:e,sortedColumnDirection:o.sortIndicator,columns:f(f({},t.gridData[y].columns),n)};return{gridData:f(f({},t.gridData),p({},y,f(f({},t.gridData[y]),i)))}}))},onCellSelect:function(e,n,i){t.setState((function(t){var o=p({},y,f(f({},t.gridData[y]),{selectedRow:void 0,selectedCell:{sectionId:e,rowId:n,columnId:i}}));return{gridData:f(f({},t.gridData),o)}}))},hasSelectableRows:!0,onRowSelect:function(e,n){t.setState((function(t){var i=p({},y,f(f({},t.gridData[y]),{selectedRow:{sectionId:e,rowId:n},selectedCell:void 0}));return{gridData:f(f({},t.gridData),i)}}))},onRequestSectionCollapse:function(e){-1!==t.state.gridData[y].collapsedSectionList.findIndex((function(t){return e===t}))?t.setState((function(t){var n=p({},y,f(f({},t.gridData[y]),{collapsedSectionList:t.gridData[y].collapsedSectionList.filter((function(t){return e!==t}))}));return{gridData:f(f({},t.gridData),n)}})):t.setState((function(t){var n=p({},y,f(f({},t.gridData[y]),{collapsedSectionList:[].concat(u(t.gridData[y].collapsedSectionList),[e])}));return{gridData:f(f({},t.gridData),n)}}))},rowHeight:"orion-fusion-theme"===n.className?"2.2rem":void 0,hasResizableColumns:!0,onRequestColumnResize:function(e,n){var i={},o=t.state.gridData[y],r=f({},Object.values(o.columns).find((function(t){return t.id===e})));r.width=Math.max(n,50),i["".concat(e)]=r,t.setState((function(t){var e={columns:f(f({},t.gridData[y].columns),i)};return{gridData:f(f({},t.gridData),p({},y,f(f({},t.gridData[y]),e)))}}))}})),o.default.createElement("div",{className:w("data-grid-basic")},o.default.createElement(r.default,{id:I,pinnedColumns:[e[I].columns["Column-0"],e[I].columns["Column-1"]],overflowColumns:[e[I].columns["Column-2"]],columnHighlightId:e[I].columnHighlightId,sections:[this.buildSection(I,"Grid-2-Section-0","Grid 2 Section 0",4),this.buildSection(I,"Grid-2-Section-1","Grid 2 Section 1",4)],fill:!0,onColumnSelect:function(e){var n={},i=t.state.gridData[I],o=f({},Object.values(i.columns).find((function(t){return t.id===e})));if(o.sortIndicator="ascending"===o.sortIndicator?"descending":"ascending",n["".concat(e)]=o,e!==i.sortedColumnId){var r=f({},Object.values(i.columns).find((function(t){return t.id===i.sortedColumnId})));r&&(r.sortIndicator=void 0,n["".concat(i.sortedColumnId)]=r)}t.setState((function(t){var i={sortedColumnId:e,sortedColumnDirection:o.sortIndicator,columns:f(f({},t.gridData[I].columns),n)};return{gridData:f(f({},t.gridData),p({},I,f(f({},t.gridData[I]),i)))}}))},onCellSelect:function(e,n,i){t.setState((function(t){var o=p({},I,f(f({},t.gridData[I]),{selectedRow:void 0,selectedCell:{sectionId:e,rowId:n,columnId:i}}));return{gridData:f(f({},t.gridData),o)}}))},hasSelectableRows:!0,onRowSelect:function(e,n){t.setState((function(t){var i=p({},I,f(f({},t.gridData[I]),{selectedRow:{sectionId:e,rowId:n},selectedCell:void 0}));return{gridData:f(f({},t.gridData),i)}}))},onRequestSectionCollapse:function(e){-1!==t.state.gridData[I].collapsedSectionList.findIndex((function(t){return e===t}))?t.setState((function(t){var n=p({},I,f(f({},t.gridData[I]),{collapsedSectionList:t.gridData[I].collapsedSectionList.filter((function(t){return e!==t}))}));return{gridData:f(f({},t.gridData),n)}})):t.setState((function(t){var n=p({},I,f(f({},t.gridData[I]),{collapsedSectionList:[].concat(u(t.gridData[I].collapsedSectionList),[e])}));return{gridData:f(f({},t.gridData),n)}}))},rowHeight:"orion-fusion-theme"===n.className?"2.2rem":void 0,hasResizableColumns:!0,onRequestColumnResize:function(e,n){var i={},o=t.state.gridData[I],r=f({},Object.values(o.columns).find((function(t){return t.id===e})));r.width=Math.max(n,50),i["".concat(e)]=r,t.setState((function(t){var e={columns:f(f({},t.gridData[I].columns),i)};return{gridData:f(f({},t.gridData),p({},I,f(f({},t.gridData[I]),e)))}}))}})))}}])&&S(e.prototype,n),i&&S(e,i),Object.defineProperty(e,"prototype",{writable:!1}),l}(o.default.Component);O.contextType=l.default;e.c=O}}]);