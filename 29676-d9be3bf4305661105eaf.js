"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[29676],{33112:function(e,t,n){var r=n(22411),a=n(59848);t.c=void 0;var o=r(n(97936)),i=m(n(11504)),l=m(n(93820)),c=n(95324),s=r(n(58848));function u(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(u=function(e){return e?n:t})(e)}function m(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=a(e)&&"function"!=typeof e)return{default:e};var n=u(t);if(n&&n.has(e))return n.get(e);var r={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var l=o?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(r,i,l):r[i]=e[i]}return r.default=e,n&&n.set(e,r),r}var d=function(){var e=(0,i.useState)(!1),t=(0,o.default)(e,2),n=t[0],r=t[1],a=function(){return r(!n)};return n?i.default.createElement(s.default,{variant:"utility",text:"Featured button",icon:i.default.createElement(c.IconFeatured,null),onClick:a}):i.default.createElement(s.default,{variant:"utility",text:"Featured off button",icon:i.default.createElement(c.IconFeaturedOff,null),onClick:a})},p=i.default.createElement(c.IconMultipleResultsNormal,{a11yLabel:"Results normal",height:"1.5em",width:"1.5em"}),f=i.default.createElement(c.IconMultipleResultsNotNormal,{a11yLabel:"Results not normal",height:"1.5em",width:"1.5em"}),h=i.default.createElement(c.IconMultipleResultsCritical,{a11yLabel:"Results critical",height:"1.5em",width:"1.5em"}),y=[{id:"row_1",cells:[{content:p},{content:"Discern Care Set (1)"},{content:i.default.createElement(d,null)}]},{id:"row_2",cells:[{content:p},{content:"Initial observation Care/Day High Severity 99220 (2)"},{content:i.default.createElement(d,null)}]},{id:"row_3",cells:[{content:f},{content:"Arterial Sheath Care (3)"},{content:i.default.createElement(d,null)}]},{id:"row_4",cells:[{content:" "},{content:"Sbsq Observation Care/Day High Severity 99226 (4)"},{content:i.default.createElement(d,null)}]},{id:"row_5",cells:[{content:h},{content:"Arterial Sheath Care (5)"},{content:i.default.createElement(d,null)}]}],b=[{id:"Column-0",displayName:"Icon",width:"5em",align:l.alignTypes.CENTER},{id:"Column-1",displayName:"Service name",width:"20em"},{id:"Column-2",displayName:"Featured",width:"5em",align:l.alignTypes.CENTER}];t.c=function(){return i.default.createElement(l.default,{id:"compact-interactive-list-fixed-width",ariaLabel:"Compact Interactive List",rows:y,columns:b,numberOfColumns:2,rowHeaderIndex:1})}},33360:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});n(11504);var r=n(69788),a=n(80512),o=["components"];function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c={},s="wrapper";function u(e){var t=e.components,n=l(e,o);return(0,r.mdx)(s,i({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"fixed-width-columns"},"Fixed Width Columns"),(0,r.mdx)("h3",{id:"description"},"Description"),(0,r.mdx)("p",null,"This example demonstrates a ",(0,r.mdx)("a",{parentName:"p",href:"/terra-ui/components/cerner-terra-framework-docs/compact-interactive-list/about"},"Compact Interactive List")," component that renders a collection of interactive information in a list format that has a single tab stop. "),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The ",(0,r.mdx)("a",{parentName:"li",href:"/terra-ui/components/cerner-terra-framework-docs/compact-interactive-list/about"},"numberOfColumns")," property is set to ",(0,r.mdx)("strong",{parentName:"li"},"2")," to arrange the list in two visual columns."),(0,r.mdx)("li",{parentName:"ul"},"Each visual column has three semantic columns: an icon, a text description, and an interactive element column."),(0,r.mdx)("li",{parentName:"ul"},"All semantic columns have the ",(0,r.mdx)("a",{parentName:"li",href:"/terra-ui/components/cerner-terra-framework-docs/compact-interactive-list/about"},"width")," property explicitly set, with the ",(0,r.mdx)("a",{parentName:"li",href:"/terra-ui/components/cerner-terra-framework-docs/compact-interactive-list/about"},"flexGrow")," property omitted. The columns keep their width and do not expand or shrink."),(0,r.mdx)("li",{parentName:"ul"},"A horizontal scrollbar is displayed if the screen width is less than the width of the list."),(0,r.mdx)("li",{parentName:"ul"},"The list is one-tab stop. You can move focus between cells with the arrow keys or by clicking cells. Click ",(0,r.mdx)("strong",{parentName:"li"},"Featured")," (star) button or use the arrow keys and press the ",(0,r.mdx)("strong",{parentName:"li"},"SPACEBAR")," to change the state.")),(0,r.mdx)(a.c,{mdxType:"FixedWidthColumns"}))}u.isMDXComponent=!0},80512:function(e,t,n){n.d(t,{c:function(){return d}});var r=n(11504),a=n(33112),o=n(69788),i=["components"];function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s={};function u(e){var t=e.components,n=c(e,i);return(0,o.mdx)("wrapper",l({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport CompactInteractiveList, { alignTypes } from 'terra-compact-interactive-list';\nimport {\n  IconFeaturedOff, IconFeatured, IconMultipleResultsNormal, IconMultipleResultsNotNormal, IconMultipleResultsCritical,\n} from 'terra-icon';\nimport Button from 'terra-button';\n\nconst FeaturedIcon = () => {\n  const [isFeatured, setIsFeatured] = useState(false);\n  const onButtonClick = () => setIsFeatured(!isFeatured);\n  return (\n    isFeatured ? <Button variant=\"utility\" text=\"Featured button\" icon={<IconFeatured />} onClick={onButtonClick} /> : <Button variant=\"utility\" text=\"Featured off button\" icon={<IconFeaturedOff />} onClick={onButtonClick} />\n  );\n};\n\nconst iconResultsNormal = <IconMultipleResultsNormal a11yLabel=\"Results normal\" height=\"1.5em\" width=\"1.5em\" />;\nconst iconResultsNotNormal = <IconMultipleResultsNotNormal a11yLabel=\"Results not normal\" height=\"1.5em\" width=\"1.5em\" />;\nconst iconResultsCritical = <IconMultipleResultsCritical a11yLabel=\"Results critical\" height=\"1.5em\" width=\"1.5em\" />;\n\n// Source rows data for tests\nconst rows = [\n  {\n    id: 'row_1',\n    cells: [\n      { content: iconResultsNormal },\n      { content: 'Discern Care Set (1)' },\n      { content: <FeaturedIcon /> },\n    ],\n  },\n  {\n    id: 'row_2',\n    cells: [\n      { content: iconResultsNormal },\n      { content: 'Initial observation Care/Day High Severity 99220 (2)' },\n      { content: <FeaturedIcon /> },\n    ],\n  },\n  {\n    id: 'row_3',\n    cells: [\n      { content: iconResultsNotNormal },\n      { content: 'Arterial Sheath Care (3)' },\n      { content: <FeaturedIcon /> },\n    ],\n  },\n  {\n    id: 'row_4',\n    cells: [\n      { content: ' ' },\n      { content: 'Sbsq Observation Care/Day High Severity 99226 (4)' },\n      { content: <FeaturedIcon /> },\n    ],\n  },\n  {\n    id: 'row_5',\n    cells: [\n      { content: iconResultsCritical },\n      { content: 'Arterial Sheath Care (5)' },\n      { content: <FeaturedIcon /> },\n    ],\n  },\n];\n\nconst cols = [\n  {\n    id: 'Column-0',\n    displayName: 'Icon',\n    width: '5em',\n    align: alignTypes.CENTER,\n  },\n  {\n    id: 'Column-1',\n    displayName: 'Service name',\n    width: '20em',\n  },\n  {\n    id: 'Column-2',\n    displayName: 'Featured',\n    width: '5em',\n    align: alignTypes.CENTER,\n  },\n];\n\nconst FixedWidthColumns = () => (\n  <CompactInteractiveList\n    id=\"compact-interactive-list-fixed-width\"\n    ariaLabel=\"Compact Interactive List\"\n    rows={rows}\n    columns={cols}\n    numberOfColumns={2}\n    rowHeaderIndex={1}\n  />\n);\n\nexport default FixedWidthColumns;\n\n")))}u.isMDXComponent=!0;var m=n(33792),d=function(e){var t=e.title,n=e.description,o=e.isExpanded;return r.createElement(m.c,{title:t||"Fixed Width Columns",description:n,example:r.createElement(a.c,null),exampleSrc:r.createElement(u,null),isExpanded:o})}}}]);