"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[7446],{85367:function(e,t,n){t.Z=void 0;var l=r(n(67294)),a=r(n(7270)),i=r(n(20993));function r(e){return e&&e.__esModule?e:{default:e}}var c=function(){return l.default.createElement(a.default,{summaryId:"example-static-table",summary:"This table shows an implementation of static width table columns.",numberOfColumns:4,cellPaddingStyle:"standard",columnWidths:[{static:{value:60,unit:"px"}},{static:{value:45,unit:"px"}},{static:{value:5,unit:"rem"}},{static:{value:120,unit:"px"}}],dividerStyle:"both",headerData:{cells:[{key:"cell-0",id:"unique-cell-0",children:"60px"},{key:"cell-1",id:"unique-cell-1",children:"45px"},{key:"cell-2",id:"unique-cell-2",children:"5rem"},{key:"cell-3",id:"unique-cell-3",children:"120px"}]},bodyData:[{rows:(e=i.default,e.map((function(e){return{key:(t=e).key,cells:(n=t.cells,n.map((function(e){return function(e){return{key:e.key,children:e.title}}(e)})))};var t,n})))}]});var e};t.Z=c},20993:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=[{key:"unique-0",toggleText:"Toggle Power Row 0",discloseText:"Power Row 0 - Details",primaryIndex:1,cells:[{key:"unique-0-0",title:"Dave Smith"},{key:"unique-0-1",title:"123 Adams Drive"},{key:"unique-0-2",title:"123-456-7890"},{key:"unique-0-3",title:"dave.smith@gmail.com"}]},{key:"unique-1",toggleText:"Toggle Power Row 1",discloseText:"Power Row 1 - Details",primaryIndex:1,cells:[{key:"unique-1-0",title:"Michael Smith"},{key:"unique-1-1",title:"345 Raymond Road"},{key:"unique-1-2",title:"111-222-3333"},{key:"unique-1-3",title:"michael.smith@gmail.com"}]},{key:"unique-2",toggleText:"Toggle Power Row 2",discloseText:"Power Row 2 - Details",primaryIndex:1,cells:[{key:"unique-2-0",title:"Jack Smith"},{key:"unique-2-1",title:"567 Drive Street"},{key:"unique-2-2",title:"222-333-4444"},{key:"unique-2-3",title:"jack.smith@gmail.com"}]},{key:"unique-3",toggleText:"Toggle Power Row 3",discloseText:"Power Row 3 - Details",primaryIndex:1,cells:[{key:"unique-3-0",title:"Tom Smith"},{key:"unique-3-1",title:"789 Bay Road"},{key:"unique-3-2",title:"555-666-7777"},{key:"unique-3-3",title:"tom.smith@gmail.com"}]},{key:"unique-4",toggleText:"Toggle Power Row 4",discloseText:"Power Row 4 - Details",primaryIndex:1,cells:[{key:"unique-4-0",title:"Paul Smith"},{key:"unique-4-1",title:"123 Adams Drive"},{key:"unique-4-2",title:"777-888-9999"},{key:"unique-4-3",title:"paul.smith@gmail.com"}]}];t.default=n},7446:function(e,t,n){n.r(t),n.d(t,{default:function(){return k}});var l=n(67294),a=n(81254),i=n(85367),r=["components"];function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},c.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u={},s="wrapper";function d(e){var t=e.components,n=o(e,r);return(0,a.mdx)(s,c({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Table from 'terra-table';\nimport mockData from './mock-data/mock-select';\n\nconst createCell = cell => ({ key: cell.key, children: cell.title });\n\nconst createCellsForRow = cells => cells.map(cell => createCell(cell));\n\nconst createRow = rowData => (\n  {\n    key: rowData.key,\n    cells: createCellsForRow(rowData.cells),\n  }\n);\n\nconst createRows = data => data.map(childItem => createRow(childItem));\n\nconst StaticWidthTable = () => (\n  <Table\n    summaryId=\"example-static-table\"\n    summary=\"This table shows an implementation of static width table columns.\"\n    numberOfColumns={4}\n    cellPaddingStyle=\"standard\"\n    columnWidths={[\n      { static: { value: 60, unit: 'px' } },\n      { static: { value: 45, unit: 'px' } },\n      { static: { value: 5, unit: 'rem' } },\n      { static: { value: 120, unit: 'px' } },\n    ]}\n    dividerStyle=\"both\"\n    headerData={{\n      cells: [\n        { key: 'cell-0', id: 'unique-cell-0', children: '60px' },\n        { key: 'cell-1', id: 'unique-cell-1', children: '45px' },\n        { key: 'cell-2', id: 'unique-cell-2', children: '5rem' },\n        { key: 'cell-3', id: 'unique-cell-3', children: '120px' },\n      ],\n    }}\n    bodyData={[{\n      rows: createRows(mockData),\n    }]}\n  />\n);\n\nexport default StaticWidthTable;\n\n")))}d.isMDXComponent=!0;var m=n(49271),p=function(e){var t=e.title,n=e.description,a=e.isExpanded;return l.createElement(m.Z,{title:t||"Static Width Table",description:n,example:l.createElement(i.Z,null),exampleSrc:l.createElement(d,null),isExpanded:a})},y=["components"];function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},h.apply(this,arguments)}function x(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var w={},f="wrapper";function k(e){var t=e.components,n=x(e,y);return(0,a.mdx)(f,h({},w,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"terra-table---static-width-columns"},"Terra Table - Static Width Columns"),(0,a.mdx)("h2",{id:"create-row-and-cell-generation-functions"},"Create Row and Cell Generation Functions"),(0,a.mdx)("p",null,"First we declare our method of creating our rows."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const createRow = rowData => (\n+   {\n+     key: rowData.key,\n+     cells: createCellsForRow(rowData.cells),\n+   }\n+ );\n\n+ const createRows = data => data.map(childItem => createRow(childItem));\n")),(0,a.mdx)("p",null,"Followed by unpacking our cell data into those rows."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const createCell = cell => ({ key: cell.key, children: cell.title });\n\n+ const createCellsForRow = cells => cells.map(cell => createCell(cell));\n")),(0,a.mdx)("p",null,"And then we define the functional component returning our table."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const StaticWidthTable = () => (\n+   <Table\n+     summaryId=\"example-static-table\"\n+     summary=\"This table shows an implementation of static width table columns.\"\n+     numberOfColumns={4}\n+     cellPaddingStyle=\"standard\"\n+     headerData={{\n+       cells: [\n+         { key: 'cell-0', id: `unique-cell-0`, children: '60px' },\n+         { key: 'cell-1', id: `unique-cell-1`, children: '45px' },\n+         { key: 'cell-2', id: `unique-cell-2`, children: '5rem' },\n+         { key: 'cell-3', id: `unique-cell-3`, children: '120px' },\n+       ],\n+     }}\n+     bodyData={[{\n+       rows: createRows(mockData),\n+     }]}\n+   />\n+ );\n")),(0,a.mdx)("p",null,"Then in order to adjust our columns, we set the ",(0,a.mdx)("inlineCode",{parentName:"p"},"columnWidths")," prop with your appropriate index based width values."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"const StaticWidthTable = () => (\n  <Table\n    summaryId=\"example-static-table\"\n    summary=\"This table shows an implementation of static width table columns.\"\n    numberOfColumns={4}\n    cellPaddingStyle=\"standard\"\n+   columnWidths={[\n+     { static: { value: 80, unit: 'px' } },\n+     { static: { value: 55, unit: 'px' } },\n+     { static: { value: 5, unit: 'rem' } },\n+     { static: { value: 120, unit: 'px' } },\n+   ]}\n    headerData={{\n      cells: [\n        { key: 'cell-0', id: `unique-cell-0`, children: '60px' },\n        { key: 'cell-1', id: `unique-cell-1`, children: '45px' },\n        { key: 'cell-2', id: `unique-cell-2`, children: '5rem' },\n        { key: 'cell-3', id: `unique-cell-3`, children: '120px' },\n      ],\n    }}\n    bodyData={[{\n      rows: createRows(mockData),\n    }]}\n  />\n);\n")),(0,a.mdx)("p",null,"Using these steps we get the following example:"),(0,a.mdx)(p,{mdxType:"StaticWidthTable"}))}k.isMDXComponent=!0}}]);