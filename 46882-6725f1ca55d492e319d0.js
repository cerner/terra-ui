"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[46882],{12883:function(e,t,l){var n=l(24994),r=l(73738);t.YZ=t.dt=t.Hd=t.NZ=void 0,Object.defineProperty(t,"fI",{enumerable:!0,get:function(){return i.Row}}),t.Ay=t.$d=void 0;var a=m(l(96540)),s=n(l(5556)),u=n(l(67967)),o=l(92912),i=m(l(26984)),d=n(l(89744));function c(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(c=function(e){return e?l:t})(e)}function m(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=r(e)&&"function"!=typeof e)return{default:e};var l=c(t);if(l&&l.has(e))return l.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(n,s,u):n[s]=e[s]}return n.default=e,l&&l.set(e,n),n}var p=u.default.bind(d.default),f={children:s.default.node},y={isRequired:s.default.bool};(t.dt=function(e){var t=e.children;return a.default.createElement(i.Cell,{className:p("bold")},t)}).propTypes=f,(t.$d=function(e){var t=e.children;return a.default.createElement(i.Cell,{className:p("code-block-override")},t)}).propTypes=f,(t.YZ=function(e){var t=e.isRequired;return a.default.createElement(i.Cell,{className:p([t?["required"]:[]])},t?"required":"optional")}).propTypes=y,(t.NZ=function(e){var t=e.children;return a.default.createElement(i.Cell,{className:p("code-block-override")},t)}).propTypes=f,(t.Hd=function(e){var t=e.children;return a.default.createElement(i.Cell,null,t)}).propTypes=f;var h=function(e){var t=e.children,l=(0,a.useContext)(o.ThemeContext);return a.default.createElement(i.default,{paddingStyle:"compact",className:p("table",l.className)},a.default.createElement(i.Header,{className:p("header")},a.default.createElement(i.HeaderCell,null,"Prop"),a.default.createElement(i.HeaderCell,null,"Type"),a.default.createElement(i.HeaderCell,null,"Required"),a.default.createElement(i.HeaderCell,null,"Default"),a.default.createElement(i.HeaderCell,null,"Description")),a.default.createElement(i.Body,null,t))};h.propTypes=f;t.Ay=h},46882:function(e,t,l){l.r(t),l.d(t,{default:function(){return ze}});var n=l(96540),r=l(36665),a=l(19152),s=l(78928),u=["components"];function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},o.apply(this,arguments)}function i(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var d={};function c(e){var t=e.components,l=i(e,u);return(0,r.mdx)("wrapper",o({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\n\nconst singleResultValue = [\n  {\n    eventId: '111',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n    isModified: true,\n    hasComment: true,\n  },\n];\n\nexport default () => <FlowsheetResultCell resultDataSet={singleResultValue} />;\n\n")))}c.isMDXComponent=!0;var m=l(201),p=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Default",description:l,example:n.createElement(s.A,null),exampleSrc:n.createElement(c,null),isExpanded:r})},f=l(83559),y=["components"];function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},h.apply(this,arguments)}function v(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var w={};function b(e){var t=e.components,l=v(e,y);return(0,r.mdx)("wrapper",h({},w,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultValues = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n    </Header>\n    <Body>\n      <Row>\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        <></>\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}b.isMDXComponent=!0;var g=l(29269),R=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Multiple Results",description:l,example:n.createElement(f.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(b,null),isExpanded:r})},C=l(53338),x=["components"];function O(){return O=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},O.apply(this,arguments)}function S(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var E={};function N(e){var t=e.components,l=S(e,x);return(0,r.mdx)("wrapper",O({},E,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst bloodpressureResultValue = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n    </Header>\n    <Body>\n      <Row>\n        <FlowsheetResultCell resultDataSet={bloodpressureResultValue} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}N.isMDXComponent=!0;var D=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Blood Pressure",description:l,example:n.createElement(C.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(N,null),isExpanded:r})},k=l(43781),j=["components"];function P(){return P=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},P.apply(this,arguments)}function H(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var M={};function F(e){var t=e.components,l=H(e,j);return(0,r.mdx)("wrapper",P({},M,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\n\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} resultName=\"\" />\n    </Header>\n    <Body>\n      <Row>\n        <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}F.isMDXComponent=!0;var _=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Multiple Blood Pressures",description:l,example:n.createElement(k.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(F,null),isExpanded:r})},I=l(35038),T=["components"];function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},U.apply(this,arguments)}function B(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var A={};function W(e){var t=e.components,l=B(e,T);return(0,r.mdx)("wrapper",U({},A,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\n\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    interpretation: 'critical',\n    isUnverified: true,\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} key=\"notes\" resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} key=\"notes\" resultName=\"\" />\n    </Header>\n    <Body>\n      <Row>\n        <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit />\n        <></>\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}W.isMDXComponent=!0;var V=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Unverified Results",description:l,example:n.createElement(I.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(W,null),isExpanded:r})},X=l(6503),L=["components"];function q(){return q=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},q.apply(this,arguments)}function Z(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var Y={};function K(e){var t=e.components,l=Z(e,L);return(0,r.mdx)("wrapper",q({},Y,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isUnverified: true,\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} key=\"notes\" resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} key=\"notes\" resultName=\"\" />\n      <ResultNameHeaderCell className={cx('mock-flowsheet-resultcolumn')} key=\"notes\" resultName=\"\" />\n    </Header>\n    <Body>\n      <Row>\n        <>none</>\n        <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"none\" />\n        <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"none\" />\n      </Row>\n      <Row>\n        <>compact</>\n        <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"compact\" />\n        <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"compact\" />\n      </Row>\n      <Row>\n        <>standard</>\n        <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"standard\" />\n        <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"standard\" />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}K.isMDXComponent=!0;var $=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Padding Style",description:l,example:n.createElement(X.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(K,null),isExpanded:r})},z=l(85115),J=["components"];function G(){return G=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},G.apply(this,arguments)}function Q(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var ee={};function te(e){var t=e.components,l=Q(e,J);return(0,r.mdx)("wrapper",G({},ee,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNamesBind from 'classnames/bind';\nimport Table, {\n  Header,\n  Row,\n  Body,\n  HeaderCell,\n} from 'terra-html-table';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialResultValueWithNoDataPropSystolic = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.1',\n      resultNoData: true,\n    },\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst partialResultValueWithNoDataPropDiastolic = [\n  {\n    id: '222',\n    systolic: {\n      eventId: '222.1',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '222.2',\n      resultNoData: true,\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows a standard result with the `hasResultNoData` prop or `result: { value: null, }` */}\n        <FlowsheetResultCell hasResultNoData />\n        {/* This example cell shows a partial Blood Pressure no data display using the `resultNoData` property name */}\n        <FlowsheetResultCell resultDataSet={partialResultValueWithNoDataPropSystolic} hideUnit />\n        {/* This example cell shows a partial Blood Pressure no data display using `result: { value: null, }` */}\n        <FlowsheetResultCell resultDataSet={partialResultValueWithNoDataPropDiastolic} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}te.isMDXComponent=!0;var le=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Known And Partial No Data",description:l,example:n.createElement(z.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(te,null),isExpanded:r})},ne=l(69168),re=["components"];function ae(){return ae=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},ae.apply(this,arguments)}function se(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var ue={};function oe(e){var t=e.components,l=se(e,re);return(0,r.mdx)("wrapper",ae({},ue,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNamesBind from 'classnames/bind';\nimport Table, {\n  Header,\n  Row,\n  Body,\n  HeaderCell,\n} from 'terra-html-table';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialResultValueWithNoSystolic = [\n  {\n    id: '111',\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst partialResultValueWithNoDiastolic = [\n  {\n    id: '222',\n    systolic: {\n      eventId: '222.1',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows how to use the `hasResultError` prop */}\n        <FlowsheetResultCell hasResultError />\n        {/* This example cell shows the error display when the Systolic property name is not present */}\n        <FlowsheetResultCell resultDataSet={partialResultValueWithNoSystolic} hideUnit />\n        {/* This example cell shows the error display when the Diastolic property name is not present */}\n        <FlowsheetResultCell resultDataSet={partialResultValueWithNoDiastolic} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}oe.isMDXComponent=!0;var ie=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Known Error And Partial Error",description:l,example:n.createElement(ne.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(oe,null),isExpanded:r})},de=l(53836),ce=["components"];function me(){return me=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},me.apply(this,arguments)}function pe(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var fe={};function ye(e){var t=e.components,l=pe(e,ce);return(0,r.mdx)("wrapper",me({},fe,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNamesBind from 'classnames/bind';\nimport Table, {\n  Header,\n  Row,\n  Body,\n  HeaderCell,\n} from 'terra-html-table';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultValues = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.123456789123456789123456789123456789123456789',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n      <HeaderCell className={cx(['mock-flowsheet-resultcolumn', 'half-column'])} />\n      <HeaderCell className={cx(['mock-flowsheet-resultcolumn', 'triple-column'])} />\n    </Header>\n    <Body>\n      <Row>\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n      </Row>\n      <Row>\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}ye.isMDXComponent=!0;var he=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Numeric Overflow",description:l,example:n.createElement(de.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(ye,null),isExpanded:r})},ve=l(40893),we=["components"];function be(){return be=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},be.apply(this,arguments)}function ge(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var Re={};function Ce(e){var t=e.components,l=ge(e,we);return(0,r.mdx)("wrapper",be({},Re,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNamesBind from 'classnames/bind';\nimport Table, {\n  Header,\n  Row,\n  Body,\n  HeaderCell,\n  Cell,\n} from 'terra-html-table';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialStandard = {\n  result: {\n    value: '12345.678',\n    unit: 'mL',\n  },\n};\n\nconst partialSystolic = {\n  eventId: '1602328271.1',\n  result: {\n    value: '120',\n    unit: 'mmHg',\n  },\n};\n\nconst partialDiastolic = {\n  eventId: '1602328271.2',\n  result: {\n    value: '80',\n    unit: 'mmHg',\n  },\n};\n\nconst standardInError = [\n  {\n    eventId: '1577836800',\n    ...partialStandard,\n    status: 'entered-in-error',\n  },\n  {\n    eventId: '1577836911',\n    ...partialStandard,\n  },\n];\n\nconst bloodpressureOneInError = [\n  {\n    id: '111',\n    systolic: {\n      ...partialSystolic,\n      status: 'entered-in-error',\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n  {\n    id: '112',\n    systolic: {\n      ...partialSystolic,\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n];\n\nconst bloodpressureBothInError = [\n  {\n    id: '211',\n    systolic: {\n      ...partialSystolic,\n      status: 'entered-in-error',\n    },\n    diastolic: {\n      ...partialDiastolic,\n      status: 'entered-in-error',\n    },\n  },\n  {\n    id: '212',\n    systolic: {\n      ...partialSystolic,\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table')}>\n    <Header>\n      <HeaderCell className={cx(['mock-flowsheet-resultcolumn', 'double-column'])} />\n      <HeaderCell className={cx('mock-flowsheet-resultcolumn')} />\n    </Header>\n    <Body>\n      <Row>\n        <Cell>standard result</Cell>\n        <FlowsheetResultCell resultDataSet={standardInError} hideUnit />\n      </Row>\n      <Row>\n        <Cell>blood pressure: systolic-only</Cell>\n        <FlowsheetResultCell resultDataSet={bloodpressureOneInError} hideUnit />\n      </Row>\n      <Row>\n        <Cell>blood pressure: both systolic & diastolic</Cell>\n        <FlowsheetResultCell resultDataSet={bloodpressureBothInError} hideUnit />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}Ce.isMDXComponent=!0;var xe=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Status Entered In Error",description:l,example:n.createElement(ve.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(Ce,null),isExpanded:r})},Oe=l(6363),Se=["components"];function Ee(){return Ee=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Ee.apply(this,arguments)}function Ne(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var De={};function ke(e){var t=e.components,l=Ne(e,Se);return(0,r.mdx)("wrapper",Ee({},De,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst defaultBloodPressureResult = [\n  {\n    id: '1',\n    systolic: {\n      eventId: '2',\n      result: {\n        value: '130',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '3',\n      result: {\n        value: '80',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nconst multipleResults = [\n  {\n    id: '4',\n    systolic: {\n      eventId: '5',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '6',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n  {\n    id: '7',\n    systolic: {\n      eventId: '8',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '9',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst numericResultsNoOverflow = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nconst numericResultsOverflow = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '10111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nconst multipleDecoratedResults = [\n  {\n    id: '10',\n    systolic: {\n      eventId: '11',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '12',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: false,\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '13',\n    systolic: {\n      eventId: '14',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '15',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: true,\n    },\n  },\n];\n\nconst decoratedResult = [\n  {\n    id: '16',\n    systolic: {\n      eventId: '17',\n      result: {\n        value: '85',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n    },\n    diastolic: {\n      eventId: '18',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isUnverified: false,\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst partialResultWithNoDataPropSystolic = [\n  {\n    id: '19',\n    systolic: {\n      eventId: '20',\n      resultNoData: true,\n    },\n    diastolic: {\n      eventId: '21',\n      result: {\n        value: '85',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nconst partialResultWithNoDataPropDiastolic = [\n  {\n    id: '22',\n    systolic: {\n      eventId: '23',\n      result: {\n        value: '170',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n    diastolic: {\n      eventId: '24',\n      resultNoData: true,\n    },\n  },\n];\n\nconst partialResultError = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst unverifiedResult = [\n  {\n    id: '25',\n    systolic: {\n      eventId: '26',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isUnverified: true,\n    },\n    diastolic: {\n      eventId: '27',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: true,\n    },\n  },\n];\n\nconst enteredInError = [\n  {\n    id: '1577836800',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n    status: 'entered-in-error',\n  },\n  {\n    id: '1577836911',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table-full')}>\n    <Header>\n      <ResultNameHeaderCell key=\"notes\" resultName=\"Notes\" />\n      <ResultNameHeaderCell key=\"result\" resultName=\"Clinical Results\" />\n      <ResultNameHeaderCell key=\"date\" resultName=\"Date\" />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows a standard result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 1, result: { value: 'Standard Result (With Unit)' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={defaultBloodPressureResult} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 2, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple results */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 3, result: { value: 'Multiple Results' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={multipleResults} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 4, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple decorated results */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 5, result: { value: 'Multiple Decorated Results' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={multipleDecoratedResults} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 6, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a decorated result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 7, result: { value: 'Decorated Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={decoratedResult} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 8, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a partial Blood Pressure no data display using the `resultNoData` property name for the Diastolic result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 9, result: { value: 'Partial Result, Diastolic' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultWithNoDataPropDiastolic} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 10, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a partial Blood Pressure no data display using the `resultNoData` property name for the Systolic result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 11, result: { value: 'Partial Result, Systolic' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultWithNoDataPropSystolic} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 12, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows an unverified result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 13, result: { value: 'Unverified Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={unverifiedResult} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 14, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a standard result with the `hasResultNoData` prop */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 15, result: { value: 'No Data Result' } }]} />\n        <FlowsheetResultCell key=\"result\" hasResultNoData />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 16, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple numeric results without overflow present */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 23, result: { value: 'Numeric Without Overflow' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={numericResultsNoOverflow} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 24, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple numeric results with overflow present */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 25, result: { value: 'Numeric With Overflow' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={numericResultsOverflow} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 26, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with a status of entered-in-error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 21, result: { value: 'Entered-in-error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={enteredInError} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 22, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with an error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 17, result: { value: 'Error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" hasResultError />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 18, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with a partial error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 19, result: { value: 'Partial Error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultError} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 20, result: { value: 'May 12th' } }]} />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}ke.isMDXComponent=!0;var je=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Semantic Table Example",description:l,example:n.createElement(Oe.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(ke,null),isExpanded:r})},Pe=l(33021),He=["components"];function Me(){return Me=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Me.apply(this,arguments)}function Fe(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var _e={};function Ie(e){var t=e.components,l=Fe(e,He);return(0,r.mdx)("wrapper",Me({},_e,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\nimport classNamesBind from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isUnverified: true,\n  },\n];\n\nexport default () => (\n  <Table className={cx('mock-flowsheet-table-full')}>\n    <Header>\n      <ResultNameHeaderCell key=\"padding\" resultName=\"Padding Type\" />\n      <ResultNameHeaderCell key=\"bp\" resultName=\"Blood Pressure Result\" />\n      <ResultNameHeaderCell key=\"temp\" resultName=\"Unverified Temperature Result\" />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows results with no padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 1, result: { value: 'None' } }]} paddingStyle=\"none\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"none\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"none\" />\n      </Row>\n      <Row>\n        {/* This example cell shows results with a compact padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 3, result: { value: 'Compact' } }]} paddingStyle=\"compact\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"compact\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"compact\" />\n      </Row>\n      <Row>\n        {/* This example cell shows results with a standard padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 5, result: { value: 'Standard' } }]} paddingStyle=\"standard\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"standard\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"standard\" />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}Ie.isMDXComponent=!0;var Te=function(e){var t=e.title,l=e.description,r=e.isExpanded;return n.createElement(m.A,{title:t||"Flowsheet Result Cell Padding Style Semantic Example",description:l,example:n.createElement(Pe.A,null),exampleCssSrc:n.createElement(g.A,null),exampleSrc:n.createElement(Ie,null),isExpanded:r})},Ue=l(12883),Be=["components"];function Ae(){return Ae=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Ae.apply(this,arguments)}function We(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var Ve={},Xe="wrapper";function Le(e){var t=e.components,l=We(e,Be);return(0,r.mdx)(Xe,Ae({},Ve,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(Ue.Ay,{mdxType:"PropsTable"},(0,r.mdx)(Ue.fI,{key:"ROW1",mdxType:"Row"},(0,r.mdx)(Ue.dt,{mdxType:"PropNameCell"},"resultDataSet"),(0,r.mdx)(Ue.$d,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  shape: {\n    id: {\n      type: 'string',\n      description: 'A single clinical result or blood pressure result id.',\n    },\n    resultData: {\n      type: 'custom',\n      description: 'A single clinical result or blood pressure result.',\n    },\n  },\n}],\n"))),(0,r.mdx)(Ue.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(Ue.NZ,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"[]\n"))),(0,r.mdx)(Ue.Hd,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"A set of clinical results. Example object structure listed above.                                              ."))),(0,r.mdx)(Ue.fI,{key:"ROW2",mdxType:"Row"},(0,r.mdx)(Ue.dt,{mdxType:"PropNameCell"},"hideUnit"),(0,r.mdx)(Ue.$d,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(Ue.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(Ue.NZ,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(Ue.Hd,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Visually hides the unit of measure when presented in a series of side-by-side columns of the same unit."))),(0,r.mdx)(Ue.fI,{key:"ROW3",mdxType:"Row"},(0,r.mdx)(Ue.dt,{mdxType:"PropNameCell"},"paddingStyle"),(0,r.mdx)(Ue.$d,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'none'\n  'standard'\n  'compact'\n],\n"))),(0,r.mdx)(Ue.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(Ue.NZ,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"'compact'\n"))),(0,r.mdx)(Ue.Hd,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"The padding styling to apply to the Time Column Header Cell.\nOne of ",(0,r.mdx)("inlineCode",{parentName:"p"},"'none'"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"'standard'"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"'compact'"),"."))),(0,r.mdx)(Ue.fI,{key:"ROW4",mdxType:"Row"},(0,r.mdx)(Ue.dt,{mdxType:"PropNameCell"},"hasResultError"),(0,r.mdx)(Ue.$d,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(Ue.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(Ue.NZ,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(Ue.Hd,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Override that shows an Error display. Used when there is a known error or problem when retrieving or assembling the clinical result data."))),(0,r.mdx)(Ue.fI,{key:"ROW5",mdxType:"Row"},(0,r.mdx)(Ue.dt,{mdxType:"PropNameCell"},"hasResultNoData"),(0,r.mdx)(Ue.$d,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(Ue.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(Ue.NZ,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(Ue.Hd,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,'Override that shows a known "No Data" display. Used when there is known to be no value for a given clinical result concept at a specific datetime.')))))}Le.isMDXComponent=!0;var qe=["components"];function Ze(){return Ze=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Ze.apply(this,arguments)}function Ye(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var Ke={},$e="wrapper";function ze(e){var t=e.components,l=Ye(e,qe);return(0,r.mdx)($e,Ze({},Ke,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(a.E,{mdxType:"Badge"}),(0,r.mdx)("h1",{id:"terra-clinical-flowsheet-result-cell"},"Terra Clinical Flowsheet Result Cell"),(0,r.mdx)("p",null,"The Clinical Result is a standardized view for single result values added to a Patient's Medical Chart. The flowsheet result cell is specifically for the grid display of a result collection, and can handle displaying an indication of multiple results."),(0,r.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Install with ",(0,r.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"npm install terra-clinical-result"))))),(0,r.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,r.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,r.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,r.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,r.mdx)("h2",{id:"usage-guide"},"Usage Guide"),(0,r.mdx)("p",null,"The flowsheet cell for clinical results is constructed by providing the same structured object as the clinical result in an array, allowing for multiple results to be indicated in the same time cell."),(0,r.mdx)("p",null,"Currently the Flowsheet expects an array of one or more results - and if there are multiple, it will display the first in the array, with an indication of additional results. Updates are in progress to also look at the performedDateTime value if provided to evaluate which result is the most recent to appropriately display, regardless of which order index position in the array it is."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\n")),(0,r.mdx)("h2",{id:"component-features"},"Component Features"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)(p,{title:"Flowsheet Result Cell",mdxType:"DefaultCell"}),(0,r.mdx)(R,{title:"Flowsheet Result Cell with Multiple Results",mdxType:"MultipleResultsCell"}),(0,r.mdx)(D,{title:"Flowsheet Result Cell with Blood Pressure Result",mdxType:"BloodPressureCell"}),(0,r.mdx)(_,{title:"Flowsheet Result Cell with Multiple Blood Pressure Results",mdxType:"MultipleBloodPressuresCell"}),(0,r.mdx)(V,{title:"Flowsheet Result Cell with Unverified Results",mdxType:"UnverifiedResultsCell"}),(0,r.mdx)($,{title:"Flowsheet Result Cell Padding Styles",mdxType:"PaddingStyleCell"}),(0,r.mdx)(le,{title:"Flowsheet Result Cell for 'Known No Result' and Blood Pressure partial 'No Result'",description:"Use the 'hasResultNoData' prop to show the 'No Data' display for the Flowsheet Result Cell. For Blood Pressure, Use either the 'resultNoData' property name or ' result: { value: null, }' to show the 'No Data' display for either the Systolic or Diastolic result:",mdxType:"KnownAndPartialNoData"}),(0,r.mdx)(ie,{title:"Displays for a full 'Known Error' and for partial missing results",description:"Use the 'hasResultError' prop to show the 'Error' display for the full Flowsheet Result Cell. Or if there is a missing part results (e.g. Systolic or Diastolic), that portion will show the error display:",mdxType:"KnownErrorAndPartialError"}),(0,r.mdx)(he,{title:"Flowsheet Result Cell with a numeric result that overflows the container",description:"When displaying a result with an overflowed numeric value, instead of truncating the value, shows 'View Results' message.",mdxType:"NumericOverflow"}),(0,r.mdx)(xe,{title:"Uncharted Result as 'Entered In Error'",description:"Display for when the result status has been set to 'entered-in-error'",mdxType:"StatusEnteredInError"}),(0,r.mdx)(je,{title:"Flowsheet Result Cell in Semantic Table",mdxType:"SemanticStyleCell"}),(0,r.mdx)(Te,{title:"Flowsheet Result Cell Padding Styles in Semantic Table",mdxType:"SemanticPaddingStyleCell"}),(0,r.mdx)("h2",{id:"flowsheet-result-cell-props"},"Flowsheet Result Cell Props"),(0,r.mdx)(Le,{mdxType:"FlowsheetResultCellProps"}))}ze.isMDXComponent=!0},89744:function(e,t,l){l.r(t),t.default={"clinical-lowlight-theme":"PropsTable-module__clinical-lowlight-theme___3pa8J","orion-fusion-theme":"PropsTable-module__orion-fusion-theme___FtP5r",bold:"PropsTable-module__bold___-z9Sz",table:"PropsTable-module__table___rzW-v",required:"PropsTable-module__required___ev190","code-block-override":"PropsTable-module__code-block-override___fF0JK"}},78482:function(e,t,l){l.r(t),t.default={"clinical-lowlight-theme":"Table-module__clinical-lowlight-theme___PqYJ8","orion-fusion-theme":"Table-module__orion-fusion-theme___d9rxf",table:"Table-module__table___eg2Mi","padding-standard":"Table-module__padding-standard___BfbC-","padding-compact":"Table-module__padding-compact___Yus6Z",striped:"Table-module__striped___n8xJe"}},53338:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{id:"111",systolic:{eventId:"111.1",result:{value:"111",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"}}}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}))))}},78928:function(e,t,l){t.A=void 0;var n,r=(n=l(96540))&&n.__esModule?n:{default:n},a=l(76421);var s=[{eventId:"111",result:{value:"12345.678",unit:"mL"},isModified:!0,hasComment:!0}];t.A=function(){return r.default.createElement(a.FlowsheetResultCell,{resultDataSet:s})}},85115:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=d(l(67967)),u=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=s.default.bind(o.default),m=[{id:"111",systolic:{eventId:"111.1",resultNoData:!0},diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],p=[{id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"222.2",resultNoData:!0}}];t.A=function(){return r.default.createElement(u.default,{className:c("mock-flowsheet-table")},r.default.createElement(u.Header,null,r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")}),r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")}),r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")})),r.default.createElement(u.Body,null,r.default.createElement(u.Row,null,r.default.createElement(a.FlowsheetResultCell,{hasResultNoData:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:p,hideUnit:!0}))))}},69168:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=d(l(67967)),u=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=s.default.bind(o.default),m=[{id:"111",diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],p=[{id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"}}];t.A=function(){return r.default.createElement(u.default,{className:c("mock-flowsheet-table")},r.default.createElement(u.Header,null,r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")}),r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")}),r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")})),r.default.createElement(u.Body,null,r.default.createElement(u.Row,null,r.default.createElement(a.FlowsheetResultCell,{hasResultError:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:p,hideUnit:!0}))))}},43781:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}))))}},83559:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),resultName:""})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(r.default.Fragment,null))))}},53836:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=d(l(67967)),u=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=s.default.bind(o.default),m=[{eventId:"1602328271",result:{value:"101.123456789123456789123456789123456789123456789",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}];t.A=function(){return r.default.createElement(u.default,{className:c("mock-flowsheet-table")},r.default.createElement(u.Header,null,r.default.createElement(u.HeaderCell,{className:c("mock-flowsheet-resultcolumn")}),r.default.createElement(u.HeaderCell,{className:c(["mock-flowsheet-resultcolumn","half-column"])}),r.default.createElement(u.HeaderCell,{className:c(["mock-flowsheet-resultcolumn","triple-column"])})),r.default.createElement(u.Body,null,r.default.createElement(u.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0})),r.default.createElement(u.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}))))}},6503:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}],p=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isUnverified:!0}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),key:"notes",resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),key:"notes",resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),key:"notes",resultName:""})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(r.default.Fragment,null,"none"),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0,paddingStyle:"none"}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:p,hideUnit:!0,paddingStyle:"none"})),r.default.createElement(s.Row,null,r.default.createElement(r.default.Fragment,null,"compact"),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0,paddingStyle:"compact"}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:p,hideUnit:!0,paddingStyle:"compact"})),r.default.createElement(s.Row,null,r.default.createElement(r.default.Fragment,null,"standard"),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0,paddingStyle:"standard"}),r.default.createElement(a.FlowsheetResultCell,{resultDataSet:p,hideUnit:!0,paddingStyle:"standard"}))))}},33021:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}],p=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isUnverified:!0}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table-full")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{key:"padding",resultName:"Padding Type"}),r.default.createElement(a.ResultNameHeaderCell,{key:"bp",resultName:"Blood Pressure Result"}),r.default.createElement(a.ResultNameHeaderCell,{key:"temp",resultName:"Unverified Temperature Result"})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:1,result:{value:"None"}}],paddingStyle:"none"}),r.default.createElement(a.FlowsheetResultCell,{key:"bp",resultDataSet:m,hideUnit:!0,paddingStyle:"none"}),r.default.createElement(a.FlowsheetResultCell,{key:"temp",resultDataSet:p,hideUnit:!0,paddingStyle:"none"})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:3,result:{value:"Compact"}}],paddingStyle:"compact"}),r.default.createElement(a.FlowsheetResultCell,{key:"bp",resultDataSet:m,hideUnit:!0,paddingStyle:"compact"}),r.default.createElement(a.FlowsheetResultCell,{key:"temp",resultDataSet:p,hideUnit:!0,paddingStyle:"compact"})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:5,result:{value:"Standard"}}],paddingStyle:"standard"}),r.default.createElement(a.FlowsheetResultCell,{key:"bp",resultDataSet:m,hideUnit:!0,paddingStyle:"standard"}),r.default.createElement(a.FlowsheetResultCell,{key:"temp",resultDataSet:p,hideUnit:!0,paddingStyle:"standard"}))))}},6363:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{id:"1",systolic:{eventId:"2",result:{value:"130",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"3",result:{value:"80",unit:"mmHg"}}}],p=[{id:"4",systolic:{eventId:"5",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"6",result:{value:"77",unit:"mmHg"},interpretation:"critical"}},{id:"7",systolic:{eventId:"8",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"9",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],f=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}],y=[{eventId:"1602328271",result:{value:"10111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}],h=[{id:"10",systolic:{eventId:"11",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"12",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!1,isModified:!0,hasComment:!0}},{id:"13",systolic:{eventId:"14",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"15",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!0}}],v=[{id:"16",systolic:{eventId:"17",result:{value:"85",unit:"mmHg"},interpretation:"low"},diastolic:{eventId:"18",result:{value:"77",unit:"mmHg"},isUnverified:!1,isModified:!0,hasComment:!0}}],w=[{id:"19",systolic:{eventId:"20",resultNoData:!0},diastolic:{eventId:"21",result:{value:"85",unit:"mmHg"}}}],b=[{id:"22",systolic:{eventId:"23",result:{value:"170",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"24",resultNoData:!0}}],g=[{id:"111",systolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],R=[{id:"25",systolic:{eventId:"26",result:{value:"140",unit:"mmHg"},interpretation:"high",isUnverified:!0},diastolic:{eventId:"27",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!0}}],C=[{id:"1577836800",result:{value:"12345.678",unit:"mL"},status:"entered-in-error"},{id:"1577836911",result:{value:"12345.678",unit:"mL"}}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table-full")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{key:"notes",resultName:"Notes"}),r.default.createElement(a.ResultNameHeaderCell,{key:"result",resultName:"Clinical Results"}),r.default.createElement(a.ResultNameHeaderCell,{key:"date",resultName:"Date"})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:1,result:{value:"Standard Result (With Unit)"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:m}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:2,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:3,result:{value:"Multiple Results"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:p,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:4,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:5,result:{value:"Multiple Decorated Results"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:h,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:6,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:7,result:{value:"Decorated Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:v,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:8,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:9,result:{value:"Partial Result, Diastolic"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:b,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:10,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:11,result:{value:"Partial Result, Systolic"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:w,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:12,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:13,result:{value:"Unverified Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:R,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:14,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:15,result:{value:"No Data Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",hasResultNoData:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:16,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:23,result:{value:"Numeric Without Overflow"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:f}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:24,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:25,result:{value:"Numeric With Overflow"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:y}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:26,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:21,result:{value:"Entered-in-error Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:C}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:22,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:17,result:{value:"Error Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",hasResultError:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:18,result:{value:"May 12th"}}]})),r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:19,result:{value:"Partial Error Result"}}]}),r.default.createElement(a.FlowsheetResultCell,{key:"result",resultDataSet:g,hideUnit:!0}),r.default.createElement(a.FlowsheetResultCell,{key:"date",resultDataSet:[{id:20,result:{value:"May 12th"}}]}))))}},40893:function(e,t,l){t.A=void 0;var n=i(l(96540)),r=l(76421),a=i(l(67967)),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=d(e)&&"function"!=typeof e)return{default:e};var l=o(t);if(l&&l.has(e))return l.get(e);var n={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&Object.prototype.hasOwnProperty.call(e,a)){var s=r?Object.getOwnPropertyDescriptor(e,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=e[a]}return n.default=e,l&&l.set(e,n),n}(l(26984)),u=i(l(97753));function o(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(o=function(e){return e?l:t})(e)}function i(e){return e&&e.__esModule?e:{default:e}}function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function c(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function m(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?c(Object(l),!0).forEach((function(t){p(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):c(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function p(e,t,l){var n;return n=function(e,t){if("object"!=d(e)||!e)return e;var l=e[Symbol.toPrimitive];if(void 0!==l){var n=l.call(e,t||"default");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==d(n)?n:String(n))in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}var f=a.default.bind(u.default),y={result:{value:"12345.678",unit:"mL"}},h={eventId:"1602328271.1",result:{value:"120",unit:"mmHg"}},v={eventId:"1602328271.2",result:{value:"80",unit:"mmHg"}},w=[m(m({eventId:"1577836800"},y),{},{status:"entered-in-error"}),m({eventId:"1577836911"},y)],b=[{id:"111",systolic:m(m({},h),{},{status:"entered-in-error"}),diastolic:m({},v)},{id:"112",systolic:m({},h),diastolic:m({},v)}],g=[{id:"211",systolic:m(m({},h),{},{status:"entered-in-error"}),diastolic:m(m({},v),{},{status:"entered-in-error"})},{id:"212",systolic:m({},h),diastolic:m({},v)}];t.A=function(){return n.default.createElement(s.default,{className:f("mock-flowsheet-table")},n.default.createElement(s.Header,null,n.default.createElement(s.HeaderCell,{className:f(["mock-flowsheet-resultcolumn","double-column"])}),n.default.createElement(s.HeaderCell,{className:f("mock-flowsheet-resultcolumn")})),n.default.createElement(s.Body,null,n.default.createElement(s.Row,null,n.default.createElement(s.Cell,null,"standard result"),n.default.createElement(r.FlowsheetResultCell,{resultDataSet:w,hideUnit:!0})),n.default.createElement(s.Row,null,n.default.createElement(s.Cell,null,"blood pressure: systolic-only"),n.default.createElement(r.FlowsheetResultCell,{resultDataSet:b,hideUnit:!0})),n.default.createElement(s.Row,null,n.default.createElement(s.Cell,null,"blood pressure: both systolic & diastolic"),n.default.createElement(r.FlowsheetResultCell,{resultDataSet:g,hideUnit:!0}))))}},35038:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.A=void 0;var r=d(l(96540)),a=l(76421),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var u=a?Object.getOwnPropertyDescriptor(e,s):null;u&&(u.get||u.set)?Object.defineProperty(r,s,u):r[s]=e[s]}return r.default=e,l&&l.set(e,r),r}(l(26984)),u=d(l(67967)),o=d(l(97753));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}function d(e){return e&&e.__esModule?e:{default:e}}var c=u.default.bind(o.default),m=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},interpretation:"critical",isUnverified:!0}];t.A=function(){return r.default.createElement(s.default,{className:c("mock-flowsheet-table")},r.default.createElement(s.Header,null,r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),key:"notes",resultName:""}),r.default.createElement(a.ResultNameHeaderCell,{className:c("mock-flowsheet-resultcolumn"),key:"notes",resultName:""})),r.default.createElement(s.Body,null,r.default.createElement(s.Row,null,r.default.createElement(a.FlowsheetResultCell,{resultDataSet:m,hideUnit:!0}),r.default.createElement(r.default.Fragment,null))))}},85444:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=d(l(96540)),r=d(l(5556)),a=d(l(46942)),s=d(l(67967)),u=d(l(52103)),o=d(l(78482)),i=["children","disableStripes","paddingStyle"];function d(e){return e&&e.__esModule?e:{default:e}}function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},c.apply(this,arguments)}function m(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var p=s.default.bind(o.default),f={children:r.default.node.isRequired,disableStripes:r.default.bool,paddingStyle:r.default.oneOf(["none","standard","compact"])},y=function(e){var t=e.children,l=e.disableStripes,r=e.paddingStyle,s=m(e,i),o=n.default.useContext(u.default),d=(0,a.default)(p("table",{striped:!l},{"padding-standard":"standard"===r},{"padding-compact":"compact"===r},o.className),s.className);return n.default.createElement("table",c({},s,{className:d}),t)};y.propTypes=f,y.defaultProps={disableStripes:!1,paddingStyle:"none"};t.default=y},61452:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(l(96540)),r=s(l(5556)),a=["children"];function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var o={children:r.default.node},i=function(e){var t=e.children,l=u(e,a);return n.default.createElement("tbody",l,t)};i.propTypes=o,i.defaultProps={children:[]};t.default=i},86472:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(l(96540)),r=s(l(5556)),a=["children"];function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var o={children:r.default.node},i=function(e){var t=e.children,l=u(e,a);return n.default.createElement("td",l,t)};i.propTypes=o,i.defaultProps={children:[]};t.default=i},97441:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=u(l(96540)),r=u(l(5556)),a=u(l(10767)),s=["children"];function u(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var i={children:r.default.node},d=function(e){var t=e.children,l=o(e,s);return n.default.createElement("thead",l,n.default.createElement("tr",null,a.default.addScope(t,"col")))};d.propTypes=i,d.defaultProps={children:[]};t.default=d},22417:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(l(96540)),r=s(l(5556)),a=["children"];function s(e){return e&&e.__esModule?e:{default:e}}function u(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var o={children:r.default.node},i=function(e){var t=e.children,l=u(e,a);return n.default.createElement("th",l,t)};i.propTypes=o,i.defaultProps={children:[]};t.default=i},36142:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=i(l(96540)),r=i(l(5556)),a=i(l(67967)),s=i(l(78482)),u=i(l(10767)),o=["children"];function i(e){return e&&e.__esModule?e:{default:e}}function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},d.apply(this,arguments)}function c(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var m=a.default.bind(s.default),p={children:r.default.node},f=function(e){var t=e.children,l=c(e,o),r=m(["row"]);return n.default.createElement("tr",d({},l,{className:l.className?"".concat(r," ").concat(l.className):r}),u.default.addScope(t,"row"))};f.propTypes=p,f.defaultProps={children:[]};t.default=f},10767:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,r=(n=l(96540))&&n.__esModule?n:{default:n};var a={addScope:function(e,t){var l=[];return r.default.Children.forEach(e,(function(e){l.push(r.default.cloneElement(e,{scope:"TableHeaderCell"===e.type.name?t:void 0}))})),l}};t.default=a},26984:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"Body",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(t,"Cell",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(t,"Header",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(t,"HeaderCell",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(t,"Row",{enumerable:!0,get:function(){return a.default}}),t.default=void 0;var n=i(l(85444)),r=i(l(61452)),a=i(l(36142)),s=i(l(86472)),u=i(l(97441)),o=i(l(22417));function i(e){return e&&e.__esModule?e:{default:e}}t.default=n.default}}]);