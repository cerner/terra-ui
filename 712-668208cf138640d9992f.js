"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[712],{27235:function(e,n,t){var l=t(64836),o=t(18698);n.Z=void 0;var a=l(t(861)),r=l(t(27424)),c=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=u(n);if(t&&t.has(e))return t.get(e);var l={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var c=a?Object.getOwnPropertyDescriptor(e,r):null;c&&(c.get||c.set)?Object.defineProperty(l,r,c):l[r]=e[r]}l.default=e,t&&t.set(e,l);return l}(t(67294)),i=t(15560),s=l(t(14312)),d=l(t(51401));function u(e){if("function"!=typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(u=function(e){return e?t:n})(e)}var f=[{id:"Column-0",displayName:"Patient"},{id:"Column-1",displayName:"Location"},{id:"Column-2",displayName:"Illness Severity"},{id:"Column-3",displayName:"Visit"},{id:"Column-4",displayName:"Allergy"},{id:"Column-5",displayName:"Primary Contact"},{id:"Column-6",displayName:"Generic Order Counts"},{id:"Column-7",displayName:"Patient Age"},{id:"Column-8",displayName:"Medication History"},{id:"Column-9",displayName:"My Relationship"},{id:"Column-10",displayName:"Not Selectable",isSelectable:!1}],m=[{id:"1",ariaLabel:"First Row",cells:[{content:"Fleck, Arthur"},{content:"1007-MTN"},{content:"Unstable"},{content:"Inpatient, 2 months"},{content:""},{content:"Quinzell, Harleen"},{content:""},{isMasked:!0},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]},{id:"2",ariaLabel:"Second Row",cells:[{content:"Wayne, Bruce"},{content:"1007-MTN-DR"},{content:"Stable"},{content:"Outpatient, 2 days"},{content:"Phytochemicals"},{content:"Grayson, Richard"},{content:""},{content:""},{isMasked:!0},{content:"Admitting Physician"},{content:"",isSelectable:!1}]}],p=function(){var e=f,n=m,t=c.default.useContext(i.DisclosureManagerContext),l=(0,c.useState)(n),o=(0,r.default)(l,2),u=o[0],p=o[1],w=(0,c.useCallback)((function(n,l){if(n&&l){for(var o=u.findIndex((function(e){return e.id===n})),r=e.findIndex((function(e){return e.id===l})),i=(0,a.default)(u),s=0;s<u.length;s+=1)for(var f=0;f<u[s].cells.length;f+=1){var m=u[s].cells[f];!m.isSelected||s===o&&f===r||(m.isSelected=!1)}i[o].cells[r].isSelected=!u[o].cells[r].isSelected,p(i),t.disclose({preferredType:"panel",size:"tiny",content:{component:c.default.createElement(d.default,{columnHeader:e[r].displayName,rowHeader:u[o].cells[0].content,content:u[o].cells[r].content,name:e[r].displayName})}})}}),[e,t,u]),y=(0,c.useCallback)((function(){for(var e=(0,a.default)(u),n=0;n<u.length;n+=1)for(var t=0;t<u[n].cells.length;t+=1)e[n].cells[t].isSelected=!1;p(e)}),[u]);return c.default.createElement(s.default,{id:"worklist-data-grid-row-selection",overflowColumns:e,rows:u,rowHeaderIndex:0,rowHeight:"50px",defaultColumnWidth:100,columnHeaderHeight:"100px",ariaLabel:"Worklist Data Grid With Cell Selection",onCellSelect:w,onClearSelectedCells:y})};n.Z=p},51401:function(e,n,t){var l=t(64836);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=l(t(56690)),a=l(t(89728)),r=l(t(66115)),c=l(t(61655)),i=l(t(94993)),s=l(t(73808)),d=l(t(67294)),u=l(t(45697)),f=l(t(47166)),m=l(t(55281)),p=l(t(10027)),w=l(t(17092)),y=t(15560),h=l(t(94804));function C(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,l=(0,s.default)(e);if(n){var o=(0,s.default)(this).constructor;t=Reflect.construct(l,arguments,o)}else t=l.apply(this,arguments);return(0,i.default)(this,t)}}var g=f.default.bind(h.default),v={name:u.default.string,content:u.default.string,rowHeader:u.default.string,columnHeader:u.default.string,disclosureManager:y.disclosureManagerShape},b=function(e){(0,c.default)(t,e);var n=C(t);function t(e){var l;return(0,o.default)(this,t),(l=n.call(this,e)).checkLockState=l.checkLockState.bind((0,r.default)(l)),l.state={text:void 0},l}return(0,a.default)(t,[{key:"componentDidMount",value:function(){var e=this.props.disclosureManager;e&&e.registerDismissCheck&&e.registerDismissCheck(this.checkLockState)}},{key:"checkLockState",value:function(){var e=this;return this.state.text&&this.state.text.length?new Promise((function(n,t){confirm("".concat(e.props.name," has unsaved changes that will be lost. Do you wish to continue?"))?n():t()})):Promise.resolve()}},{key:"render",value:function(){var e=this.props,n=e.disclosureManager,t=e.name,l=e.content,o=e.rowHeader,a=e.columnHeader;return d.default.createElement(p.default,{fill:!0,header:d.default.createElement(w.default,{title:"Disclosure - ".concat(t),onClose:n.closeDisclosure})},d.default.createElement("div",{className:g("content-wrapper")},d.default.createElement("h3",null,"".concat(o," - ").concat(a)),d.default.createElement("p",null,l),d.default.createElement(m.default,{text:"Dismiss",onClick:function(){n.dismiss().catch((function(){console.log("Dismiss failed. A lock must be in place.")}))}})))}}]),t}(d.default.Component);b.propTypes=v,b.defaultProps={name:"Disclosure Component"};var D=(0,y.withDisclosureManager)(b);n.default=D},10042:function(e,n,t){t.r(n),t.d(n,{default:function(){return C}});var l=t(67294),o=t(81254),a=t(27235),r=["components"];function c(){return c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e},c.apply(this,arguments)}function i(e,n){if(null==e)return{};var t,l,o=function(e,n){if(null==e)return{};var t,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s={};function d(e){var n=e.components,t=i(e,r);return(0,o.mdx)("wrapper",c({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState, useCallback } from 'react';\nimport { DisclosureManagerContext } from 'terra-disclosure-manager';\nimport WorklistDataGrid from 'terra-worklist-data-grid';\nimport DisclosureComponent from './disclosure/DisclosureComponent';\n\nconst gridDataJSON = {\n  cols: [\n    { id: 'Column-0', displayName: 'Patient' },\n    { id: 'Column-1', displayName: 'Location' },\n    { id: 'Column-2', displayName: 'Illness Severity' },\n    { id: 'Column-3', displayName: 'Visit' },\n    { id: 'Column-4', displayName: 'Allergy' },\n    { id: 'Column-5', displayName: 'Primary Contact' },\n    { id: 'Column-6', displayName: 'Generic Order Counts' },\n    { id: 'Column-7', displayName: 'Patient Age' },\n    { id: 'Column-8', displayName: 'Medication History' },\n    { id: 'Column-9', displayName: 'My Relationship' },\n    { id: 'Column-10', displayName: 'Not Selectable', isSelectable: false },\n  ],\n  rows: [\n    {\n      id: '1',\n      ariaLabel: 'First Row',\n      cells: [\n        { content: 'Fleck, Arthur' },\n        { content: '1007-MTN' },\n        { content: 'Unstable' },\n        { content: 'Inpatient, 2 months' },\n        { content: '' },\n        { content: 'Quinzell, Harleen' },\n        { content: '' },\n        { isMasked: true },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n    {\n      id: '2',\n      ariaLabel: 'Second Row',\n      cells: [\n        { content: 'Wayne, Bruce' },\n        { content: '1007-MTN-DR' },\n        { content: 'Stable' },\n        { content: 'Outpatient, 2 days' },\n        { content: 'Phytochemicals' },\n        { content: 'Grayson, Richard' },\n        { content: '' },\n        { content: '' },\n        { isMasked: true },\n        { content: 'Admitting Physician' },\n        { content: '', isSelectable: false },\n      ],\n    },\n  ],\n};\nconst CellSelection = () => {\n  const rowHeaderIndex = 0;\n  const { cols, rows } = gridDataJSON;\n  const disclosureManager = React.useContext(DisclosureManagerContext);\n\n  const [rowData, setRowData] = useState(rows);\n\n  const onCellSelect = useCallback((rowId, columnId) => {\n    if (rowId && columnId) {\n      const rowIndex = rowData.findIndex(e => e.id === rowId);\n      const columnIndex = cols.findIndex(e => e.id === columnId);\n\n      // Remove current selections\n      const newRowData = [...rowData];\n      for (let row = 0; row < rowData.length; row += 1) {\n        for (let cell = 0; cell < rowData[row].cells.length; cell += 1) {\n          const currentCell = rowData[row].cells[cell];\n          if (currentCell.isSelected && !(row === rowIndex && cell === columnIndex)) {\n            currentCell.isSelected = false;\n          }\n        }\n      }\n\n      // Toggle selection state of selected cell\n      newRowData[rowIndex].cells[columnIndex].isSelected = !rowData[rowIndex].cells[columnIndex].isSelected;\n      setRowData(newRowData);\n\n      disclosureManager.disclose({\n        preferredType: 'panel',\n        size: 'tiny',\n        content: {\n          component: (\n            <DisclosureComponent\n              columnHeader={cols[columnIndex].displayName}\n              rowHeader={rowData[rowIndex].cells[0].content}\n              content={rowData[rowIndex].cells[columnIndex].content}\n              name={cols[columnIndex].displayName}\n            />\n          ),\n        },\n      });\n    }\n  }, [cols, disclosureManager, rowData]);\n\n  const onClearSelectedCells = useCallback(() => {\n    // Remove current selections\n    const newRowData = [...rowData];\n    for (let row = 0; row < rowData.length; row += 1) {\n      for (let cell = 0; cell < rowData[row].cells.length; cell += 1) {\n        newRowData[row].cells[cell].isSelected = false;\n      }\n    }\n\n    setRowData(newRowData);\n  }, [rowData]);\n\n  return (\n    <WorklistDataGrid\n      id=\"worklist-data-grid-row-selection\"\n      overflowColumns={cols}\n      rows={rowData}\n      rowHeaderIndex={rowHeaderIndex}\n      rowHeight=\"50px\"\n      defaultColumnWidth={100}\n      columnHeaderHeight=\"100px\"\n      ariaLabel=\"Worklist Data Grid With Cell Selection\"\n      onCellSelect={onCellSelect}\n      onClearSelectedCells={onClearSelectedCells}\n    />\n  );\n};\n\nexport default CellSelection;\n\n")))}d.isMDXComponent=!0;var u=t(49271),f=function(e){var n=e.title,t=e.description,o=e.isExpanded;return l.createElement(u.Z,{title:n||"Cell Selection",description:t,example:l.createElement(a.Z,null),exampleSrc:l.createElement(d,null),isExpanded:o})},m=["components"];function p(){return p=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e},p.apply(this,arguments)}function w(e,n){if(null==e)return{};var t,l,o=function(e,n){if(null==e)return{};var t,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var y={},h="wrapper";function C(e){var n=e.components,t=w(e,m);return(0,o.mdx)(h,p({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)(f,{title:"Worklist Data Grid With Cell Selection",mdxType:"CellSelection"}))}C.isMDXComponent=!0},94804:function(e,n,t){t.r(n),n.default={"content-wrapper":"DisclosureComponent-module__content-wrapper___N8mda"}}}]);