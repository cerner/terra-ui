"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[99069],{69326:function(e,t,n){var l=n(64836);t.Z=void 0;var o=l(n(38416)),r=l(n(27424)),c=l(n(67294)),s=l(n(19845)),a=n(34614),d=l(n(47789)),i=l(n(21091));function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){(0,o.default)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var m=s.default.bind(i.default);t.Z=function(){var e=c.default.useState("info"),t=(0,r.default)(e,2),n=t[0],l=t[1],s=c.default.useState({projects:!1,tests:!1}),i=(0,r.default)(s,2),u=i[0],f=i[1],y=function(e){var t=p(p({},u),{},(0,o.default)({},e,!u[e]));f(t)};return c.default.createElement("div",{className:m("content-wrapper")},c.default.createElement(d.default,{title:"Documents",key:"documents",onExpandAll:function(){var e=p({},u);Object.keys(e).forEach((function(t){e[t]=!0})),f(e)},onCollapseAll:function(){var e=p({},u);Object.keys(e).forEach((function(t){e[t]=!1})),f(e)}},c.default.createElement(d.default.Item,{label:"info.txt",icon:c.default.createElement(a.IconDocuments,null),key:"info",isSelected:"info"===n,onClick:function(){l("info")}}),c.default.createElement(d.default.Item,{label:"projects_2023.txt",icon:c.default.createElement(a.IconDocuments,null),key:"projects_2023",isSelected:"projects_2023"===n,onClick:function(){l("projects_2023")}}),c.default.createElement(d.default.Item,{label:"Projects",key:"projects",isSelected:"projects"===n,isExpanded:u.projects,onClick:function(){l("projects")},onToggle:function(){y("projects")},subfolderItems:[c.default.createElement(d.default.Item,{label:"project_data1.txt",icon:c.default.createElement(a.IconDocuments,null),key:"project_data1",isSelected:"project_data1"===n,onClick:function(){l("project_data1")}}),c.default.createElement(d.default.Item,{label:"project_data2.txt",icon:c.default.createElement(a.IconDocuments,null),key:"project_data2",isSelected:"project_data2"===n,onClick:function(){l("project_data2")}}),c.default.createElement(d.default.Item,{label:"Tests",key:"tests",isSelected:"tests"===n,isExpanded:u.tests,onClick:function(){l("tests")},onToggle:function(){y("tests")},icon:c.default.createElement(a.IconDocuments,null),subfolderItems:[c.default.createElement(d.default.Item,{label:"very_very_very_very_very_very_very_long_name_test.txt",icon:c.default.createElement(a.IconDocuments,null),key:"long-name-test",isSelected:"long-name-test"===n,onClick:function(){l("long-name-test")}}),c.default.createElement(d.default.Item,{label:"test.txt",icon:c.default.createElement(a.IconDocuments,null),key:"test",isSelected:"test"===n,onClick:function(){l("test")}}),c.default.createElement(d.default.Item,{label:"even_longer_long_long_long_long_long_long_long_long_long_long_long_long_name_test.txt",icon:c.default.createElement(a.IconDocuments,null),key:"longer-name-test",isSelected:"longer-name-test"===n,onClick:function(){l("longer-name-test")}})]})]})))}},99069:function(e,t,n){n.r(t),n.d(t,{default:function(){return i}});n(67294);var l=n(81254),o=n(91838),r=["components"];function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},c.apply(this,arguments)}function s(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a={},d="wrapper";function i(e){var t=e.components,n=s(e,r);return(0,l.mdx)(d,c({},a,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)(o.Z,{mdxType:"BasicFolderTree"}))}i.isMDXComponent=!0},91838:function(e,t,n){n.d(t,{Z:function(){return m}});var l=n(67294),o=n(69326),r=n(81254),c=["components"];function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},s.apply(this,arguments)}function a(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d={};function i(e){var t=e.components,n=a(e,c);return(0,r.mdx)("wrapper",s({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport { IconDocuments } from 'terra-icon';\nimport FolderTree from 'terra-folder-tree';\n\nimport styles from './BasicFolderTree.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst BasicFolderTree = () => {\n  const [selectedKey, setSelectedKey] = React.useState('info');\n  const [expandedItems, setExpandedItems] = React.useState({\n    projects: false,\n    tests: false,\n  });\n\n  const handleExpandCollapseKeys = (key) => {\n    const newExpandedItems = {\n      ...expandedItems,\n      [key]: !expandedItems[key],\n    };\n    setExpandedItems(newExpandedItems);\n  };\n\n  const handleExpandAll = () => {\n    const newExpandedItems = {\n      ...expandedItems,\n    };\n    Object.keys(newExpandedItems).forEach(v => { newExpandedItems[v] = true; });\n\n    setExpandedItems(newExpandedItems);\n  };\n\n  const handleCollapseAll = () => {\n    const newExpandedItems = {\n      ...expandedItems,\n    };\n    Object.keys(newExpandedItems).forEach(v => { newExpandedItems[v] = false; });\n\n    setExpandedItems(newExpandedItems);\n  };\n\n  return (\n    <div className={cx('content-wrapper')}>\n      <FolderTree\n        title=\"Documents\"\n        key=\"documents\"\n        onExpandAll={handleExpandAll}\n        onCollapseAll={handleCollapseAll}\n      >\n        <FolderTree.Item\n          label=\"info.txt\"\n          icon={<IconDocuments />}\n          key=\"info\"\n          isSelected={selectedKey === 'info'}\n          onClick={() => { setSelectedKey('info'); }}\n        />\n        <FolderTree.Item\n          label=\"projects_2023.txt\"\n          icon={<IconDocuments />}\n          key=\"projects_2023\"\n          isSelected={selectedKey === 'projects_2023'}\n          onClick={() => { setSelectedKey('projects_2023'); }}\n        />\n        <FolderTree.Item\n          label=\"Projects\"\n          key=\"projects\"\n          isSelected={selectedKey === 'projects'}\n          isExpanded={expandedItems.projects}\n          onClick={() => { setSelectedKey('projects'); }}\n          onToggle={() => { handleExpandCollapseKeys('projects'); }}\n          subfolderItems={[\n            (<FolderTree.Item\n              label=\"project_data1.txt\"\n              icon={<IconDocuments />}\n              key=\"project_data1\"\n              isSelected={selectedKey === 'project_data1'}\n              onClick={() => { setSelectedKey('project_data1'); }}\n            />),\n            (<FolderTree.Item\n              label=\"project_data2.txt\"\n              icon={<IconDocuments />}\n              key=\"project_data2\"\n              isSelected={selectedKey === 'project_data2'}\n              onClick={() => { setSelectedKey('project_data2'); }}\n            />),\n            (<FolderTree.Item\n              label=\"Tests\"\n              key=\"tests\"\n              isSelected={selectedKey === 'tests'}\n              isExpanded={expandedItems.tests}\n              onClick={() => { setSelectedKey('tests'); }}\n              onToggle={() => { handleExpandCollapseKeys('tests'); }}\n              icon={<IconDocuments />}\n              subfolderItems={[\n                (<FolderTree.Item\n                  label=\"very_very_very_very_very_very_very_long_name_test.txt\"\n                  icon={<IconDocuments />}\n                  key=\"long-name-test\"\n                  isSelected={selectedKey === 'long-name-test'}\n                  onClick={() => { setSelectedKey('long-name-test'); }}\n                />),\n                (<FolderTree.Item\n                  label=\"test.txt\"\n                  icon={<IconDocuments />}\n                  key=\"test\"\n                  isSelected={selectedKey === 'test'}\n                  onClick={() => { setSelectedKey('test'); }}\n                />),\n                (<FolderTree.Item\n                  label=\"even_longer_long_long_long_long_long_long_long_long_long_long_long_long_name_test.txt\"\n                  icon={<IconDocuments />}\n                  key=\"longer-name-test\"\n                  isSelected={selectedKey === 'longer-name-test'}\n                  onClick={() => { setSelectedKey('longer-name-test'); }}\n                />),\n              ]}\n            />),\n          ]}\n        />\n      </FolderTree>\n    </div>\n  );\n};\n\nexport default BasicFolderTree;\n\n")))}i.isMDXComponent=!0;var u=n(49271),p=n(85705),m=function(e){var t=e.title,n=e.description,r=e.isExpanded;return l.createElement(u.Z,{title:t||"Basic Folder Tree",description:n,example:l.createElement(o.Z,null),exampleCssSrc:l.createElement(p.Z,null),exampleSrc:l.createElement(i,null),isExpanded:r})}}}]);