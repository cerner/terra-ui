"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[18413],{18413:function(e,t,r){r.r(t),r.d(t,{default:function(){return s}});r(96540);var n=r(36665),a=["components"];function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d={},l="wrapper";function s(e){var t=e.components,r=i(e,a);return(0,n.mdx)(l,o({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.mdx)("h1",{id:"terra-cli"},"Terra CLI"),(0,n.mdx)("p",null,"Terra CLI is a command line builder that supports creating ",(0,n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#commands"},"yargs commands")," via defining ",(0,n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"command modules"),". Currently, terra-cli searches for a ",(0,n.mdx)("inlineCode",{parentName:"p"},"terra-cli")," directory in a given dependency and assumes that all subdirectories are separate command modules defined via ",(0,n.mdx)("inlineCode",{parentName:"p"},"index.js")," files in those subdirectories."),(0,n.mdx)("h2",{id:"allow-list"},"Allow List"),(0,n.mdx)("p",null,"To limit who can create these commands, terra-cli currently uses an allow list to only search for the following dependencies:"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},"@cerner/terra-functional-testing"),(0,n.mdx)("li",{parentName:"ul"},"@cerner/terra-open-source-scripts")),(0,n.mdx)("h2",{id:"dependency-searching"},"Dependency Searching"),(0,n.mdx)("p",null,"The search paths that terra-cli uses to search for terra-cli commands includes (constrained by the ",(0,n.mdx)("a",{parentName:"p",href:"#allow-list"},"allow list")," mentioned above):"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},"The current project's src directory"),(0,n.mdx)("li",{parentName:"ul"},"The src directory within subdirectories of the packages directory if the current project is ",(0,n.mdx)("inlineCode",{parentName:"li"},"terra-toolkit")),(0,n.mdx)("li",{parentName:"ul"},"The lib directory within subdirectories of the node_modules directory")),(0,n.mdx)("p",null,"We use the src directory in the first two cases to allow for easier local development."),(0,n.mdx)("h2",{id:"example-command"},"Example command"),(0,n.mdx)("p",null,"If you want to create a command ",(0,n.mdx)("inlineCode",{parentName:"p"},"test"),", you should add a file at ",(0,n.mdx)("inlineCode",{parentName:"p"},"src/terra-cli/test/index.js")," within a dependency in the allowlist. This file should be set up to be copied but not transpiled over to the ",(0,n.mdx)("inlineCode",{parentName:"p"},"lib")," directory. The file should contain something similar to:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"const test = {\n  command: 'test',\n  describe: 'Test command description',\n  builder: (yargs) => testOptionsBuilder,\n  handler: testHandler,\n};\n\nmodule.exports = test;\n")),(0,n.mdx)("p",null,"For more information on how to create these modules see the ",(0,n.mdx)("a",{parentName:"p",href:"https://github.com/yargs/yargs/blob/master/docs/advanced.md#providing-a-command-module"},"yargs documentation"),"."),(0,n.mdx)("p",null,"To run this command, you would execute:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-sh"},"terra test <options>\n")))}s.isMDXComponent=!0}}]);