"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[60041,10885,84746,73156,61297],{47131:function(e,n,r){var t=r(64836);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=t(r(54520)),i=function(e){return{bindTo:e,axis:{x:{type:a.default.helpers.AXIS_TYPE.TIME_SERIES,label:"Datetime",lowerLimit:"2016-03-02T12:00:00Z",upperLimit:"2018-12-10T12:00:00Z",ticks:{format:"%b %Y"}},y:{label:"Paired Set A",lowerLimit:0,upperLimit:200},y2:{show:!1,label:"Paired Set B",lowerLimit:100,upperLimit:350}},eventline:[{color:a.default.helpers.COLORS.GREY,style:{strokeDashArray:"4,4"},value:new Date(2016,8,1,8).toISOString()},{color:a.default.helpers.COLORS.BLACK,style:{strokeDashArray:"2,2"},value:new Date(2017,5,1,12).toISOString()}],clickPassThrough:{dateline:!1},showLabel:!0,showLegend:!0,showVGrid:!0,showHGrid:!0}};n.default=i},98160:function(e,n,r){var t=r(64836);n.Z=void 0;var a=t(r(67294)),i=t(r(54520)),o=t(r(53334));r(56867),r(379);var l=t(r(93065)),s=t(r(47131)),p=t(r(33997)),u=o.default.deepClone((0,s.default)("#pairedResultWithEventline")),d=[o.default.deepClone(p.default)],c=function(){return a.default.useEffect((function(){var e=i.default.api.graph(u);d.forEach((function(n){e.loadContent(i.default.api.pairedResult(n))}))}),[]),a.default.createElement(l.default,{id:"pairedResultWithEventline"})};n.Z=c},2107:function(e,n,r){r.r(n),r.d(n,{default:function(){return P}});var t=r(67294),a=r(81254),i=r(98160),o=["components"];function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},l.apply(this,arguments)}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p={},u="wrapper";function d(e){var n=e.components,r=s(e,o);return(0,a.mdx)(u,l({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/PairedResult/PairedResultGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getPairedResultEventlineTimeseriesConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/PairedResult/pairedResultTimeseriesWithEventline';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/PairedResult/pairedResultTimeseriesData';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\nconst graphConfig = utils.deepClone(getPairedResultEventlineTimeseriesConfig('#pairedResultWithEventline'));\nconst dataset = [utils.deepClone(exampleData)];\n\nconst PiaredResultWithEventlineExample = () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    dataset.forEach((data) => {\n      graph.loadContent(Carbon.api.pairedResult(data));\n    });\n  }, []);\n  return (\n    <ExampleGraphContainer id=\"pairedResultWithEventline\" />\n  );\n};\n\nexport default PiaredResultWithEventlineExample;\n\n")))}d.isMDXComponent=!0;var c=r(49271),m=r(25005),f=function(e){var n=e.title,r=e.description,a=e.isExpanded;return t.createElement(c.Z,{title:n||"Timeseries With Eventline",description:r,example:t.createElement(i.Z,null),exampleCssSrc:t.createElement(m.Z,null),exampleSrc:t.createElement(d,null),isExpanded:a})},h=["components"];function b(){return b=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},b.apply(this,arguments)}function g(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var x={},v="wrapper";function y(e){var n=e.components,r=g(e,h);return(0,a.mdx)(v,b({},x,r,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\n\nconst getPairedResultEventlineTimeseriesConfig = (id) => ({\n  bindTo: id,\n  axis: {\n    x: {\n      type: Carbon.helpers.AXIS_TYPE.TIME_SERIES,\n      label: 'Datetime',\n      lowerLimit: '2016-03-02T12:00:00Z',\n      upperLimit: '2018-12-10T12:00:00Z',\n      ticks: {\n        format: '%b %Y',\n      },\n    },\n    y: {\n      label: 'Paired Set A',\n      lowerLimit: 0,\n      upperLimit: 200,\n    },\n    y2: {\n      show: false,\n      label: 'Paired Set B',\n      lowerLimit: 100,\n      upperLimit: 350,\n    },\n  },\n  eventline: [\n    {\n      color: Carbon.helpers.COLORS.GREY,\n      style: {\n        strokeDashArray: '4,4',\n      },\n      value: new Date(2016, 8, 1, 8).toISOString(),\n    },\n    {\n      color: Carbon.helpers.COLORS.BLACK,\n      style: {\n        strokeDashArray: '2,2',\n      },\n      value: new Date(2017, 5, 1, 12).toISOString(),\n    },\n  ],\n  clickPassThrough: {\n    dateline: false,\n  },\n  showLabel: true,\n  showLegend: true,\n  showVGrid: true,\n  showHGrid: true,\n});\n\nexport default getPairedResultEventlineTimeseriesConfig;\n\n")))}y.isMDXComponent=!0;var O=r(53897),E=["components"];function w(){return w=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},w.apply(this,arguments)}function C(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}r(51320);var j={},S="wrapper";function P(e){var n=e.components,r=C(e,E);return(0,a.mdx)(S,w({},j,r,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"timeseries-with-eventline"},"Timeseries with eventline"),(0,a.mdx)("p",null,"This is a timeseries paired result graph with eventlines in it."),(0,a.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Install with ",(0,a.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"npm i @cerner/carbon-graphs --save-dev"))))),(0,a.mdx)("h2",{id:"usage"},"Usage"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/dist/js/carbon-graphs.js';\nimport '@cerner/carbon-graphs/dist/css/carbon-graphs.css';\n")),(0,a.mdx)("h2",{id:"example"},"Example"),(0,a.mdx)(f,{mdxType:"PairedResultGraph"}),(0,a.mdx)("details",null,(0,a.mdx)("summary",{style:{fontSize:24}},(0,a.mdx)("b",null,"Data")),(0,a.mdx)("h3",{id:"graph-config-object"},"Graph Config object"),(0,a.mdx)(y,{mdxType:"GraphConfig"}),(0,a.mdx)("h3",{id:"data-object"},"Data object"),(0,a.mdx)(O.Z,{mdxType:"DataObject"})))}P.isMDXComponent=!0}}]);