"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[11125],{11125:function(e,t,n){n.r(t),n.d(t,{default:function(){return Ue}});var r=n(67294),l=n(81254),a=n(26372),i=n(38611),o=["components"];function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}function u(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var m={};function d(e){var t=e.components,n=u(e,o);return(0,l.mdx)("wrapper",s({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '180',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} />;\n\n")))}d.isMDXComponent=!0;var c=n(49271),p=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Default",description:n,example:r.createElement(i.Z,null),exampleSrc:r.createElement(d,null),isExpanded:l})},f=n(96356),x=["components"];function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},y.apply(this,arguments)}function g(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var v={};function b(e){var t=e.components,n=g(e,x);return(0,l.mdx)("wrapper",y({},v,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '120',\n      unit: 'mmHg',\n    },\n    isModified: false,\n    hasComment: true,\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    isModified: true,\n    hasComment: false,\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} />;\n\n")))}b.isMDXComponent=!0;var h=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Decorated",description:n,example:r.createElement(f.Z,null),exampleSrc:r.createElement(b,null),isExpanded:l})},O=n(63892),R=["components"];function P(){return P=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},P.apply(this,arguments)}function H(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var C={};function N(e){var t=e.components,n=H(e,R);return(0,l.mdx)("wrapper",P({},C,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '120',\n      unit: 'mmHg',\n    },\n    isUnverified: true,\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    isUnverified: true,\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} hideUnit />;\n\n")))}N.isMDXComponent=!0;var E=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Unverified",description:n,example:r.createElement(O.Z,null),exampleSrc:r.createElement(N,null),isExpanded:l})},D=n(89698),j=["components"];function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w.apply(this,arguments)}function B(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var T={};function I(e){var t=e.components,n=B(e,j);return(0,l.mdx)("wrapper",w({},T,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '120',\n      unit: 'mmHg',\n    },\n    conceptDisplay: 'Blood Pressure Systolic',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    conceptDisplay: 'Blood Pressure Diastolic',\n    datetimeDisplay: 'Nov 23, 2019 13:31:44',\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} />;\n\n")))}I.isMDXComponent=!0;var S=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Extra Displays",description:n,example:r.createElement(D.Z,null),exampleSrc:r.createElement(I,null),isExpanded:l})},M=n(73033),V=["components"];function Z(){return Z=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Z.apply(this,arguments)}function k(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var X={};function W(e){var t=e.components,n=k(e,V);return(0,l.mdx)("wrapper",Z({},X,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '354.23377777758678567867856785687678567856767868678567856785678567856785678567857856785678567856785678567856785678578567856',\n      unit: 'mmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHg',\n    },\n    isModified: true,\n    hasComment: true,\n    conceptDisplay: 'Blood Pressure',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '354.23377777758678567867856785687678567856767868678567856785678567856785678567857856785678567856785678567856785678578567856',\n      unit: 'mmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHg',\n    },\n    isModified: true,\n    hasComment: true,\n    conceptDisplay: 'Blood Pressure',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} isTruncated />;\n\n")))}W.isMDXComponent=!0;var _=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Truncated",description:n,example:r.createElement(M.Z,null),exampleSrc:r.createElement(W,null),isExpanded:l})},L=n(14011),U=["components"];function q(){return q=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},q.apply(this,arguments)}function F(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var z={};function K(e){var t=e.components,n=F(e,U);return(0,l.mdx)("wrapper",q({},z,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst setofResultValues = [];\n\nconst mixedBPResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '180',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '60',\n      unit: 'mmHg',\n    },\n    interpretation: 'low',\n  },\n};\n\nconst criticalBPResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '180',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '120',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n};\n\nconst highBPResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '140',\n      unit: 'mmHg',\n    },\n    interpretation: 'high',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '90',\n      unit: 'mmHg',\n    },\n    interpretation: 'high',\n  },\n};\n\nconst lowBPResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '88',\n      unit: 'mmHg',\n    },\n    interpretation: 'low',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '60',\n      unit: 'mmHg',\n    },\n    interpretation: 'low',\n  },\n};\n\nconst abnormalBPResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '100',\n      unit: 'mmHg',\n    },\n    interpretation: 'abnormal',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '100',\n      unit: 'mmHg',\n    },\n    interpretation: 'abnormal',\n  },\n};\n\nsetofResultValues.push(<div key=\"critical-bloodpressure\" className={cx('bottom-space')}><ClinicalResultBloodPressure {...criticalBPResultValue} /></div>);\nsetofResultValues.push(<div key=\"high-bloodpressure\" className={cx('bottom-space')}><ClinicalResultBloodPressure {...highBPResultValue} /></div>);\nsetofResultValues.push(<div key=\"low-bloodpressure\" className={cx('bottom-space')}><ClinicalResultBloodPressure {...lowBPResultValue} /></div>);\nsetofResultValues.push(<div key=\"abnormal-bloodpressure\" className={cx('bottom-space')}><ClinicalResultBloodPressure {...abnormalBPResultValue} /></div>);\nsetofResultValues.push(<div key=\"mixed-bloodpressure\"><ClinicalResultBloodPressure {...mixedBPResultValue} /></div>);\n\nexport default () => setofResultValues;\n\n")))}K.isMDXComponent=!0;var A=n(98568),G=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Interpretation",description:n,example:r.createElement(L.Z,null),exampleCssSrc:r.createElement(A.Z,null),exampleSrc:r.createElement(K,null),isExpanded:l})},J=n(22629),Q=["components"];function Y(){return Y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Y.apply(this,arguments)}function $(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var ee={};function te(e){var t=e.components,n=$(e,Q);return(0,l.mdx)("wrapper",Y({},ee,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames/bind';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '180',\n      unit: 'mm Hg',\n    },\n    interpretation: 'critical',\n    isModified: true,\n    hasComment: true,\n    conceptDisplay: 'Systolic / Diastolic Blood Pressure',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '60',\n      unit: 'mmHg',\n    },\n    interpretation: 'low',\n    isModified: true,\n    hasComment: true,\n    conceptDisplay: 'Systolic / Diastolic Blood Pressure',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n};\n\nexport default () => (\n  <div className={cx('clinical-result-fontsize-21')}>\n    <ClinicalResultBloodPressure {...bloodpressureResultValue} />\n  </div>\n);\n\n")))}te.isMDXComponent=!0;var ne=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Change Size",description:n,example:r.createElement(J.Z,null),exampleCssSrc:r.createElement(A.Z,null),exampleSrc:r.createElement(te,null),isExpanded:l})},re=n(65080),le=["components"];function ae(){return ae=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ae.apply(this,arguments)}function ie(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var oe={};function se(e){var t=e.components,n=ie(e,le);return(0,l.mdx)("wrapper",ae({},oe,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nexport default () => <ClinicalResultBloodPressure hasResultNoData />;\n\n")))}se.isMDXComponent=!0;var ue=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Known No Data",description:n,example:r.createElement(re.Z,null),exampleSrc:r.createElement(se,null),isExpanded:l})},me=n(67167),de=["components"];function ce(){return ce=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ce.apply(this,arguments)}function pe(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var fe={};function xe(e){var t=e.components,n=pe(e,de);return(0,l.mdx)("wrapper",ce({},fe,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst partialResultValueWithNoDataPropSystolic = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    resultNoData: true,\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n};\n\nconst partialResultValueWithNoDataPropDiastolic = {\n  id: '222',\n  systolic: {\n    eventId: '222.1',\n    result: {\n      value: '140',\n      unit: 'mmHg',\n    },\n    interpretation: 'high',\n  },\n  diastolic: {\n    eventId: '222.2',\n    resultNoData: true,\n  },\n};\n\nexport default () => (\n  <React.Fragment>\n    {/* This example shows the No Data display using the `resultNoData` property name for Systolic */}\n    <ClinicalResultBloodPressure {...partialResultValueWithNoDataPropSystolic} />\n    <br />\n    <br />\n    {/* This example shows the No Data display using the `resultNoData` property name for Diastolic */}\n    <ClinicalResultBloodPressure {...partialResultValueWithNoDataPropDiastolic} />\n  </React.Fragment>\n);\n\n")))}xe.isMDXComponent=!0;var ye=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Partial No Data",description:n,example:r.createElement(me.Z,null),exampleSrc:r.createElement(xe,null),isExpanded:l})},ge=n(31813),ve=["components"];function be(){return be=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},be.apply(this,arguments)}function he(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var Oe={};function Re(e){var t=e.components,n=he(e,ve);return(0,l.mdx)("wrapper",be({},Oe,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst partialResultValueWithNoSystolic = {\n  id: '111',\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    interpretation: 'critical',\n  },\n};\n\nconst partialResultValueWithNoDiastolic = {\n  id: '222',\n  systolic: {\n    eventId: '222.1',\n    result: {\n      value: '140',\n      unit: 'mmHg',\n    },\n    interpretation: 'high',\n  },\n};\n\nexport default () => (\n  <React.Fragment>\n    {/* This example shows how to use the `hasResultError` prop */}\n    <ClinicalResultBloodPressure hasResultError />\n    <br />\n    <br />\n    {/* This example shows the error display when the Systolic property name is not present */}\n    <ClinicalResultBloodPressure {...partialResultValueWithNoSystolic} />\n    <br />\n    <br />\n    {/* This example shows the error display when the Diastolic property name is not present */}\n    <ClinicalResultBloodPressure {...partialResultValueWithNoDiastolic} />\n  </React.Fragment>\n);\n\n")))}Re.isMDXComponent=!0;var Pe=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Known Error And Partial Error",description:n,example:r.createElement(ge.Z,null),exampleSrc:r.createElement(Re,null),isExpanded:l})},He=n(91975),Ce=["components"];function Ne(){return Ne=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ne.apply(this,arguments)}function Ee(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var De={};function je(e){var t=e.components,n=Ee(e,Ce);return(0,l.mdx)("wrapper",Ne({},De,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n\nconst bloodpressureResultValue = {\n  id: '111',\n  systolic: {\n    eventId: '111.1',\n    result: {\n      value: '120',\n      unit: 'mmHg',\n    },\n    status: 'entered-in-error',\n    interpretation: 'critical',\n    hasComment: true,\n    conceptDisplay: 'Blood Pressure (Supine)',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n  diastolic: {\n    eventId: '111.2',\n    result: {\n      value: '80',\n      unit: 'mmHg',\n    },\n    status: 'entered-in-error',\n    interpretation: 'low',\n    hasComment: false,\n    conceptDisplay: 'Blood Pressure (Supine)',\n    datetimeDisplay: 'Nov 23, 2019 13:31:31',\n  },\n};\n\nexport default () => <ClinicalResultBloodPressure {...bloodpressureResultValue} />;\n\n")))}je.isMDXComponent=!0;var we=function(e){var t=e.title,n=e.description,l=e.isExpanded;return r.createElement(c.Z,{title:t||"Clinical Result Blood Pressure Status Entered In Error",description:n,example:r.createElement(He.Z,null),exampleSrc:r.createElement(je,null),isExpanded:l})},Be=n(78530),Te=["components"];function Ie(){return Ie=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ie.apply(this,arguments)}function Se(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var Me={},Ve="wrapper";function Ze(e){var t=e.components,n=Se(e,Te);return(0,l.mdx)(Ve,Ie({},Me,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)(Be.ZP,{mdxType:"PropsTable"},(0,l.mdx)(Be.X2,{key:"ROW1",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"id"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("p",null,"none")),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Blood Pressure grouped result id"))),(0,l.mdx)(Be.X2,{key:"ROW2",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"systolic"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"custom\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("p",null,"none")),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Systolic Result for blood pressure."))),(0,l.mdx)(Be.X2,{key:"ROW3",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"diastolic"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"custom\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("p",null,"none")),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Diastolic Result for blood pressure."))),(0,l.mdx)(Be.X2,{key:"ROW4",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"hideUnit"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Whether or not the unit of measure should be presented in a series of side-by-side columns of the same unit."))),(0,l.mdx)(Be.X2,{key:"ROW5",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"isTruncated"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Whether or not the text should be truncated in display. Restricts clinical result details each to one line."))),(0,l.mdx)(Be.X2,{key:"ROW6",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"hasResultError"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Whether or not there is a known error or problem when retrieving or assembling the clinical result data."))),(0,l.mdx)(Be.X2,{key:"ROW7",mdxType:"Row"},(0,l.mdx)(Be.O,{mdxType:"PropNameCell"},"hasResultNoData"),(0,l.mdx)(Be.Di,{mdxType:"TypeCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,l.mdx)(Be.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,l.mdx)(Be.mW,{mdxType:"DefaultValueCell"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,l.mdx)(Be.Ex,{mdxType:"DescriptionCell"},(0,l.mdx)("p",null,"Whether or not the result has a value for a specific datetime.")))))}Ze.isMDXComponent=!0;var ke=["components"];function Xe(){return Xe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Xe.apply(this,arguments)}function We(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var _e={},Le="wrapper";function Ue(e){var t=e.components,n=We(e,ke);return(0,l.mdx)(Le,Xe({},_e,n,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)(a.C,{mdxType:"Badge"}),(0,l.mdx)("h1",{id:"terra-clinical-result-blood-pressure"},"Terra Clinical Result Blood Pressure"),(0,l.mdx)("p",null,"The Clinical Result is a standardized view for single result values added to a Patient's Medical Chart. This is specifically for Blood Pressure Vital Sign results."),(0,l.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"Install with ",(0,l.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"npm install terra-clinical-result"))))),(0,l.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,l.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,l.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"react"),(0,l.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,l.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,l.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,l.mdx)("h2",{id:"usage-guide"},"Usage Guide"),(0,l.mdx)("p",null,"The blood pressure result is constructed similarly to the single clinical result by providing structured object with a specific construction that follows a similar pattern to the ",(0,l.mdx)("a",{parentName:"p",href:"https://www.hl7.org/fhir/observation-example-bloodpressure.html"},"HL7 FHIR Observation Blood Pressure")," example."),(0,l.mdx)("p",null,"An example of a single blood pressure result value:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { ClinicalResultBloodPressure } from 'terra-clinical-result/lib/index';\n")),(0,l.mdx)("h2",{id:"component-features"},"Component Features"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,l.mdx)("h2",{id:"examples"},"Examples"),(0,l.mdx)(p,{title:"Default Blood Pressure Clinical Result",mdxType:"DefaultResult"}),(0,l.mdx)(h,{title:"Modifiied Blood Pressure Clinical Result with Comments",mdxType:"DecoratedResult"}),(0,l.mdx)(E,{title:"Unverified Blood Pressure Clinical Result with Hide Unit of Measure",mdxType:"UnverifiedResult"}),(0,l.mdx)(S,{title:"Clinical Blood Pressure Result with additional displays",mdxType:"ExtraDisplaysResult"}),(0,l.mdx)(G,{title:"Blood Pressure Clinical Results with Intrepretation",mdxType:"InterpretationResults"}),(0,l.mdx)(ne,{title:"Changing the Blood Pressure Clinical Result Size",mdxType:"SizeChangeResult"}),(0,l.mdx)(_,{title:"Truncated Blood Pressure Clinical Result",mdxType:"TruncatedResult"}),(0,l.mdx)(ue,{title:"Display for 'Known No Result'",description:"Use the 'hasResultNoData' prop to show the 'No Data' display for the Blood Pressure Clinical Result:",mdxType:"KnownNoData"}),(0,l.mdx)(ye,{title:"Display for a Partial 'No Result'",description:"Use the 'resultNoData' property name to show the 'No Data' display for either the Systolic or Diastolic result:",mdxType:"PartialNoData"}),(0,l.mdx)(Pe,{title:"Displays for a full 'Known Error' and for partial missing results",description:"Use the 'hasResultError' prop to show the 'Error' display for the full Blood Pressure result. Or if there is a missing Systolic or Diastolic result, that portion will show the error display:",mdxType:"KnownErrorAndPartialError"}),(0,l.mdx)(we,{title:"Uncharted Result as 'Entered In Error'",description:"Display for when the result status has been set to 'entered-in-error'",mdxType:"StatusEnteredInError"}),(0,l.mdx)("h2",{id:"clinical-result-blood-pressure-props"},"Clinical-Result-Blood-Pressure Props"),(0,l.mdx)(Ze,{mdxType:"ClinicalResultBloodPressureProps"}))}Ue.isMDXComponent=!0},22629:function(e,t,n){t.Z=void 0;var r=o(n(67294)),l=n(33671),a=o(n(47166)),i=o(n(62547));function o(e){return e&&e.__esModule?e:{default:e}}var s=a.default.bind(i.default),u={id:"111",systolic:{eventId:"111.1",result:{value:"180",unit:"mm Hg"},interpretation:"critical",isModified:!0,hasComment:!0,conceptDisplay:"Systolic / Diastolic Blood Pressure",datetimeDisplay:"Nov 23, 2019 13:31:31"},diastolic:{eventId:"111.2",result:{value:"60",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0,conceptDisplay:"Systolic / Diastolic Blood Pressure",datetimeDisplay:"Nov 23, 2019 13:31:31"}};t.Z=function(){return r.default.createElement("div",{className:s("clinical-result-fontsize-21")},r.default.createElement(l.ClinicalResultBloodPressure,u))}},96356:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",systolic:{eventId:"111.1",result:{value:"120",unit:"mmHg"},isModified:!1,hasComment:!0},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},isModified:!0,hasComment:!1}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i)}},38611:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",systolic:{eventId:"111.1",result:{value:"180",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"}}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i)}},89698:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",systolic:{eventId:"111.1",result:{value:"120",unit:"mmHg"},conceptDisplay:"Blood Pressure Systolic",datetimeDisplay:"Nov 23, 2019 13:31:31"},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},conceptDisplay:"Blood Pressure Diastolic",datetimeDisplay:"Nov 23, 2019 13:31:44"}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i)}},14011:function(e,t,n){t.Z=void 0;var r=o(n(67294)),l=n(33671),a=o(n(47166)),i=o(n(62547));function o(e){return e&&e.__esModule?e:{default:e}}var s=a.default.bind(i.default),u=[],m={id:"111",systolic:{eventId:"111.1",result:{value:"180",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"111.2",result:{value:"60",unit:"mmHg"},interpretation:"low"}},d={id:"111",systolic:{eventId:"111.1",result:{value:"180",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"111.2",result:{value:"120",unit:"mmHg"},interpretation:"critical"}},c={id:"111",systolic:{eventId:"111.1",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"111.2",result:{value:"90",unit:"mmHg"},interpretation:"high"}},p={id:"111",systolic:{eventId:"111.1",result:{value:"88",unit:"mmHg"},interpretation:"low"},diastolic:{eventId:"111.2",result:{value:"60",unit:"mmHg"},interpretation:"low"}},f={id:"111",systolic:{eventId:"111.1",result:{value:"100",unit:"mmHg"},interpretation:"abnormal"},diastolic:{eventId:"111.2",result:{value:"100",unit:"mmHg"},interpretation:"abnormal"}};u.push(r.default.createElement("div",{key:"critical-bloodpressure",className:s("bottom-space")},r.default.createElement(l.ClinicalResultBloodPressure,d))),u.push(r.default.createElement("div",{key:"high-bloodpressure",className:s("bottom-space")},r.default.createElement(l.ClinicalResultBloodPressure,c))),u.push(r.default.createElement("div",{key:"low-bloodpressure",className:s("bottom-space")},r.default.createElement(l.ClinicalResultBloodPressure,p))),u.push(r.default.createElement("div",{key:"abnormal-bloodpressure",className:s("bottom-space")},r.default.createElement(l.ClinicalResultBloodPressure,f))),u.push(r.default.createElement("div",{key:"mixed-bloodpressure"},r.default.createElement(l.ClinicalResultBloodPressure,m)));t.Z=function(){return u}},31813:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},interpretation:"critical"}},o={id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"}};t.Z=function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement(a.ClinicalResultBloodPressure,{hasResultError:!0}),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(a.ClinicalResultBloodPressure,i),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(a.ClinicalResultBloodPressure,o))}},65080:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,{hasResultNoData:!0})}},67167:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",systolic:{eventId:"111.1",resultNoData:!0},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},interpretation:"critical"}},o={id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"222.2",resultNoData:!0}};t.Z=function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement(a.ClinicalResultBloodPressure,i),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement(a.ClinicalResultBloodPressure,o))}},91975:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);var i={id:"111",systolic:{eventId:"111.1",result:{value:"120",unit:"mmHg"},status:"entered-in-error",interpretation:"critical",hasComment:!0,conceptDisplay:"Blood Pressure (Supine)",datetimeDisplay:"Nov 23, 2019 13:31:31"},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},status:"entered-in-error",interpretation:"low",hasComment:!1,conceptDisplay:"Blood Pressure (Supine)",datetimeDisplay:"Nov 23, 2019 13:31:31"}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i)}},73033:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}var o={id:"111",systolic:{eventId:"111.1",result:{value:"354.23377777758678567867856785687678567856767868678567856785678567856785678567857856785678567856785678567856785678578567856",unit:"mmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHg"},isModified:!0,hasComment:!0,conceptDisplay:"Blood Pressure",datetimeDisplay:"Nov 23, 2019 13:31:31"},diastolic:{eventId:"111.2",result:{value:"354.23377777758678567867856785687678567856767868678567856785678567856785678567857856785678567856785678567856785678578567856",unit:"mmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHgmmHg"},isModified:!0,hasComment:!0,conceptDisplay:"Blood Pressure",datetimeDisplay:"Nov 23, 2019 13:31:31"}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i({},o,{isTruncated:!0}))}},63892:function(e,t,n){t.Z=void 0;var r,l=(r=n(67294))&&r.__esModule?r:{default:r},a=n(33671);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}var o={id:"111",systolic:{eventId:"111.1",result:{value:"120",unit:"mmHg"},isUnverified:!0},diastolic:{eventId:"111.2",result:{value:"80",unit:"mmHg"},isUnverified:!0}};t.Z=function(){return l.default.createElement(a.ClinicalResultBloodPressure,i({},o,{hideUnit:!0}))}}}]);