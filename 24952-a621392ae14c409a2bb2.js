"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[24952],{24952:function(t,a,e){e.r(a),e.d(a,{default:function(){return s}});e(96540);var n=e(36665),r=["components"];function o(){return o=Object.assign?Object.assign.bind():function(t){for(var a=1;a<arguments.length;a++){var e=arguments[a];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},o.apply(this,arguments)}function i(t,a){if(null==t)return{};var e,n,r=function(t,a){if(null==t)return{};var e,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)e=o[n],a.indexOf(e)>=0||(r[e]=t[e]);return r}(t,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)e=o[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var p={},l="wrapper";function s(t){var a=t.components,e=i(t,r);return(0,n.mdx)(l,o({},p,e,{components:a,mdxType:"MDXLayout"}),(0,n.mdx)("h1",{id:"how-to-show-status-overlays"},"How to Show Status Overlays"),(0,n.mdx)("p",null,"Status View can be rendered within the framework by rendering an ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay"},"ApplicationStatusOverlay")," component. Status Views will be rendered by the closest ancestor ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay-provider"},"ApplicationStatusOverlayProvider"),". All content rendered within the responding ApplicationStatusOverlayProvider will be overlaid."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState } from \'react\';\nimport ApplicationStatusOverlay from \'terra-application/lib/application-status-overlay\';\n\nconst ExampleComponent = () => {\n  const [showStatusOverlay, setShowStatusOverlay] = useState(false);\n\n  return (\n    <div>\n      <p>This component toggles a status view that lasts for 3 seconds.</p>\n      <p>\n        <button\n          type="button"\n          onClick={() => {\n            setShowStatusOverlay(true);\n\n            setTimeout(() => {\n              setShowStatusOverlay(false);\n            }, 3000);\n          }}\n        >\n          Show Status View\n        </button>\n      </p>\n      {showStatusOverlay && <ApplicationStatusOverlay message="Demo for showing status overlay view" variant="no-data" />}\n    </div>\n  );\n};\n\nexport default ExampleComponent;\n')),(0,n.mdx)("p",null,"Any component that wants to create an status view container for its children can render its own ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-status-overlay-provider"},"ApplicationStatusOverlayProvider")," to scope status view presentation to that container."),(0,n.mdx)("blockquote",null,(0,n.mdx)("p",{parentName:"blockquote"},"Note: ApplicationStatusOverlayProviders are provided by ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-base"},"ApplicationBase"),", ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-navigation"},"ApplicationNavigation")," , ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/modal-manager"},"ModalManager"),", and the ",(0,n.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/slide-panel-manager"},"SlidePanelManager"),".")))}s.isMDXComponent=!0}}]);