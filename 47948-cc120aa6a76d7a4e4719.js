"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[47948],{47948:function(e,n,r){r.r(n),r.d(n,{default:function(){return d}});r(11504);var t=r(69788),o=r(20844),a=["components"];function c(){return c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},c.apply(this,arguments)}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s={},p="wrapper";function d(e){var n=e.components,r=l(e,a);return(0,t.mdx)(p,c({},s,r,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"codeblock-loader"},"Codeblock Loader"),(0,t.mdx)("p",null,"The codeblock loader will take the passed in file and return an mdx react component containing a codeblock with the source of the passed in file and a type of the file extension."),(0,t.mdx)("h2",{id:"resource-query"},"Resource query"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"?dev-site-codeblock")),(0,t.mdx)("h2",{id:"example"},"Example"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-jsx"},"import Codeblock from './example?dev-site-codeblock';\n\n< Codeblock />\n")),(0,t.mdx)("h3",{id:"markdown-output"},"Markdown output"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-md"},"```js\nimport React from 'react';\n\nconst TagComp = () => (\n  <h1>\n    I am a test\n  </h1>\n);\n\nexport default TagComp;\n'''\n")),(0,t.mdx)("h2",{id:"rendered-codeblock"},"Rendered codeblock"),(0,t.mdx)(o.c,{mdxType:"Codeblock"}))}d.isMDXComponent=!0},20844:function(e,n,r){r.d(n,{c:function(){return p}});r(11504);var t=r(69788),o=["components"];function a(){return a=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},a.apply(this,arguments)}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l={},s="wrapper";function p(e){var n=e.components,r=c(e,o);return(0,t.mdx)(s,a({},l,r,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './example.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst TagComp = () => (\n  <h1 className={cx('body')}>\n    I am a test\n  </h1>\n);\n\nexport default TagComp;\n\n")))}p.isMDXComponent=!0}}]);