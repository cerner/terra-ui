"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[84359],{84359:function(e,n,a){a.r(n),a.d(n,{default:function(){return p}});a(67294);var t=a(81254),r=a.p+"91f6f8ffdbbd462fae8add16b0e847fe.png",i=["components"];function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e},l.apply(this,arguments)}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d={},m="wrapper";function p(e){var n=e.components,a=o(e,i);return(0,t.mdx)(m,l({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"carbon-lifecycle"},"Carbon Lifecycle"),(0,t.mdx)("p",null,"For a consistent development experience Carbon uses the same underlying interface for all graph types. All Carbon graphs are separated into 2 parts: ",(0,t.mdx)("inlineCode",{parentName:"p"},"Construct")," & ",(0,t.mdx)("inlineCode",{parentName:"p"},"GraphContent"),"."),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#construct"},"Construct"),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#loadcontentinput"},(0,t.mdx)("inlineCode",{parentName:"a"},"loadContent(input)"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#unloadcontentinput"},(0,t.mdx)("inlineCode",{parentName:"a"},"unloadContent(input)"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#destroy"},(0,t.mdx)("inlineCode",{parentName:"a"},"destroy"))))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#important-information"},"Important information")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"#graphcontent"},"GraphContent"))),(0,t.mdx)("h2",{id:"construct"},"Construct"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"Construct")," is the base for ",(0,t.mdx)("inlineCode",{parentName:"p"},"Graph")," and other types of graph that serves as a container for the datasets (content). Usually this takes care of one or more of the following:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"X Axis"),(0,t.mdx)("li",{parentName:"ul"},"Y Axis"),(0,t.mdx)("li",{parentName:"ul"},"Vertical Grid"),(0,t.mdx)("li",{parentName:"ul"},"Horizontal Grid"),(0,t.mdx)("li",{parentName:"ul"},"X Axis labels"),(0,t.mdx)("li",{parentName:"ul"},"Y Axis labels"),(0,t.mdx)("li",{parentName:"ul"},"Legend")),(0,t.mdx)("p",null,"Construct exposes following functions to handle the graph or its contents:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"loadContent")," - Load a dataset in the graph"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"unloadContent")," - Remove a dataset from the graph"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"destroy")," - Destroys the graph"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"generate")," - Called ",(0,t.mdx)("em",{parentName:"li"},"internally")," when instantiating the graph"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"resize")," - Called ",(0,t.mdx)("em",{parentName:"li"},"internally")," on window resize event to resize the graph")),(0,t.mdx)("h3",{id:"loadcontentinput"},(0,t.mdx)("inlineCode",{parentName:"h3"},"loadContent(input)")),(0,t.mdx)("p",null,"To load a graph content:"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-javascript"},'var data = {\n    key: "uid_1",\n    label: {\n        display: "Data Label 1"\n    },\n    values: [\n        {\n            x: "2016-03-01T12:00:00Z",\n            y: 14\n        },\n        {\n            x: "2016-04-10T12:00:00Z",\n            y: 1\n        },\n        {\n            x: "2016-11-01T12:00:00Z",\n            y: 18\n        }\n    ]\n};\n// Shortened for brevity, lineGraph is an instance of Carbon.api.graph\nlineGraph.loadContent(Carbon.api.line(data));\n')),(0,t.mdx)("p",null,(0,t.mdx)("strong",{parentName:"p"},"Note:")," Follow documentation of corresponding graph type for more information on loading respective contents in a graph."),(0,t.mdx)("h3",{id:"unloadcontentinput"},(0,t.mdx)("inlineCode",{parentName:"h3"},"unloadContent(input)")),(0,t.mdx)("p",null,"To remove a dataset from graph, the consumer has to provide the corresponding unique ",(0,t.mdx)("inlineCode",{parentName:"p"},"key")," and ",(0,t.mdx)("inlineCode",{parentName:"p"},"label")," object."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-javascript"},'// Shortened for brevity, lineGraph is an instance of Carbon.api.graph\nlineGraph.unloadContent({\n    key: "uid_1",\n    trackLabel: {\n        display: "Data Label 1"\n    }\n});\n')),(0,t.mdx)("h3",{id:"destroy"},(0,t.mdx)("inlineCode",{parentName:"h3"},"destroy")),(0,t.mdx)("p",null,"Destroys the graph generated within the container."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-javascript"},"// Shortened for brevity, lineGraph is an instance of Carbon.api.graph\nlineGraph.destroy();\n")),(0,t.mdx)("h2",{id:"important-information"},"Important information"),(0,t.mdx)("p",null,"Only graphs that share the same rules of ",(0,t.mdx)("inlineCode",{parentName:"p"},"Construct")," can be combined together."),(0,t.mdx)("p",null,"For instance:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"A ",(0,t.mdx)("inlineCode",{parentName:"li"},"Gantt")," chart ",(0,t.mdx)("strong",{parentName:"li"},"cannot")," be combined with a ",(0,t.mdx)("inlineCode",{parentName:"li"},"Line")," graph -> ",(0,t.mdx)("inlineCode",{parentName:"li"},"Line")," needs a X and Y axis whereas ",(0,t.mdx)("inlineCode",{parentName:"li"},"Gantt")," chart Construct only has X Axis when drawn."),(0,t.mdx)("li",{parentName:"ul"},"A ",(0,t.mdx)("inlineCode",{parentName:"li"},"Timeline")," graph ",(0,t.mdx)("strong",{parentName:"li"},"cannot")," be combined with a ",(0,t.mdx)("inlineCode",{parentName:"li"},"Line")," graph -> ",(0,t.mdx)("inlineCode",{parentName:"li"},"Line")," needs a X and Y axis whereas ",(0,t.mdx)("inlineCode",{parentName:"li"},"Timeline")," graph doesn't have a Y Axis."),(0,t.mdx)("li",{parentName:"ul"},"A ",(0,t.mdx)("inlineCode",{parentName:"li"},"Line")," graph ",(0,t.mdx)("strong",{parentName:"li"},"can")," be combined with a ",(0,t.mdx)("inlineCode",{parentName:"li"},"Bar")," or ",(0,t.mdx)("inlineCode",{parentName:"li"},"Paired Result"),".")),(0,t.mdx)("h2",{id:"graphcontent"},"GraphContent"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"GraphContent")," is the representation of the dataset drawn within the ",(0,t.mdx)("inlineCode",{parentName:"p"},"Construct"),". For instance, for ",(0,t.mdx)("inlineCode",{parentName:"p"},"Line")," graph, the ",(0,t.mdx)("inlineCode",{parentName:"p"},"Construct")," is the Axes, Labels and Legend while the ",(0,t.mdx)("inlineCode",{parentName:"p"},"GraphContent")," is the line itself."),(0,t.mdx)("p",null,"Separation of ",(0,t.mdx)("em",{parentName:"p"},"container")," and ",(0,t.mdx)("em",{parentName:"p"},"content")," allows us to:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"Render multiple ",(0,t.mdx)("inlineCode",{parentName:"li"},"GraphContent"),"s within a single ",(0,t.mdx)("inlineCode",{parentName:"li"},"Construct"),"."),(0,t.mdx)("li",{parentName:"ul"},"Draw different combinations of graphs i.e. we can draw a ",(0,t.mdx)("em",{parentName:"li"},"Combination graph")," with ",(0,t.mdx)("em",{parentName:"li"},"2 Bar graphs")," or ",(0,t.mdx)("em",{parentName:"li"},"1 Bar graph")," and ",(0,t.mdx)("em",{parentName:"li"},"1 line graph")," without ever needing to building those natively in Carbon."),(0,t.mdx)("li",{parentName:"ul"},"Draw different combinations of graph in any order necessary.")),(0,t.mdx)("img",{src:r,alt:"Graph Content",style:{width:600,height:400,paddingLeft:380}}))}p.isMDXComponent=!0}}]);