"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[97236],{74856:function(e,t,n){n.r(t),n.d(t,{default:function(){return s}});n(11504);var r=n(69788),o=["components"];function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p={},c="wrapper";function s(e){var t=e.components,n=i(e,o);return(0,r.mdx)(c,a({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"activebreakpointcontext"},"ActiveBreakpointContext"),(0,r.mdx)("p",null,"The ActiveBreakpointContext defines an interface for access to the framework's determined active breakpoint based on the current window size."),(0,r.mdx)("blockquote",null,(0,r.mdx)("p",{parentName:"blockquote"},"Note: An ActiveBreakpointContext.Provider is rendered by ",(0,r.mdx)("a",{parentName:"p",href:"/terra-ui/application/terra-application/components/application-base"},"ApplicationBase"),".\nAny components rendered within ApplicationBase can access an ActiveBreakpointContext value without rendering additional providers.")),(0,r.mdx)("h2",{id:"context-value"},"Context Value"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"const contextShape = PropTypes.oneOf(['tiny', 'small', 'medium', 'large', 'huge', 'enormous']);\n")))}s.isMDXComponent=!0}}]);