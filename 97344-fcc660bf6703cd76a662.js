"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[97344],{76116:function(e,n,l){n.Z=void 0;var t=i(l(67294)),a=i(l(7270)),r=i(l(20993));function i(e){return e&&e.__esModule?e:{default:e}}var c=function(){return t.default.createElement(a.default,{summaryId:"example-percentage-table",summary:"This table shows an implementation of percentage width table columns.",numberOfColumns:4,cellPaddingStyle:"standard",columnWidths:[{percentage:20},{percentage:40},{percentage:10},{percentage:30}],dividerStyle:"horizontal",headerData:{cells:[{key:"cell-0",id:"unique-cell-0",children:"20%"},{key:"cell-1",id:"unique-cell-1",children:"40%"},{key:"cell-2",id:"unique-cell-2",children:"10%"},{key:"cell-3",id:"unique-cell-3",children:"30%"}]},bodyData:[{rows:(e=r.default,e.map((function(e){return{key:(n=e).key,cells:(l=n.cells,l.map((function(e){return function(e){return{key:e.key,children:e.title}}(e)})))};var n,l})))}]});var e};n.Z=c},20993:function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=[{key:"unique-0",toggleText:"Toggle Power Row 0",discloseText:"Power Row 0 - Details",primaryIndex:1,cells:[{key:"unique-0-0",title:"Dave Smith"},{key:"unique-0-1",title:"123 Adams Drive"},{key:"unique-0-2",title:"123-456-7890"},{key:"unique-0-3",title:"dave.smith@gmail.com"}]},{key:"unique-1",toggleText:"Toggle Power Row 1",discloseText:"Power Row 1 - Details",primaryIndex:1,cells:[{key:"unique-1-0",title:"Michael Smith"},{key:"unique-1-1",title:"345 Raymond Road"},{key:"unique-1-2",title:"111-222-3333"},{key:"unique-1-3",title:"michael.smith@gmail.com"}]},{key:"unique-2",toggleText:"Toggle Power Row 2",discloseText:"Power Row 2 - Details",primaryIndex:1,cells:[{key:"unique-2-0",title:"Jack Smith"},{key:"unique-2-1",title:"567 Drive Street"},{key:"unique-2-2",title:"222-333-4444"},{key:"unique-2-3",title:"jack.smith@gmail.com"}]},{key:"unique-3",toggleText:"Toggle Power Row 3",discloseText:"Power Row 3 - Details",primaryIndex:1,cells:[{key:"unique-3-0",title:"Tom Smith"},{key:"unique-3-1",title:"789 Bay Road"},{key:"unique-3-2",title:"555-666-7777"},{key:"unique-3-3",title:"tom.smith@gmail.com"}]},{key:"unique-4",toggleText:"Toggle Power Row 4",discloseText:"Power Row 4 - Details",primaryIndex:1,cells:[{key:"unique-4-0",title:"Paul Smith"},{key:"unique-4-1",title:"123 Adams Drive"},{key:"unique-4-2",title:"777-888-9999"},{key:"unique-4-3",title:"paul.smith@gmail.com"}]}];n.default=l},97344:function(e,n,l){l.r(n),l.d(n,{default:function(){return k}});var t=l(67294),a=l(81254),r=l(76116),i=["components"];function c(){return c=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var l=arguments[n];for(var t in l)Object.prototype.hasOwnProperty.call(l,t)&&(e[t]=l[t])}return e},c.apply(this,arguments)}function o(e,n){if(null==e)return{};var l,t,a=function(e,n){if(null==e)return{};var l,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)l=r[t],n.indexOf(l)>=0||(a[l]=e[l]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)l=r[t],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var u={},d="wrapper";function s(e){var n=e.components,l=o(e,i);return(0,a.mdx)(d,c({},u,l,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Table from 'terra-table';\nimport mockData from './mock-data/mock-select';\n\nconst createCell = cell => ({ key: cell.key, children: cell.title });\n\nconst createCellsForRow = cells => cells.map(cell => createCell(cell));\n\nconst createRow = rowData => (\n  {\n    key: rowData.key,\n    cells: createCellsForRow(rowData.cells),\n  }\n);\n\nconst createRows = data => data.map(childItem => createRow(childItem));\n\nconst PercentageWidthTable = () => (\n  <Table\n    summaryId=\"example-percentage-table\"\n    summary=\"This table shows an implementation of percentage width table columns.\"\n    numberOfColumns={4}\n    cellPaddingStyle=\"standard\"\n    columnWidths={[\n      { percentage: 20 },\n      { percentage: 40 },\n      { percentage: 10 },\n      { percentage: 30 },\n    ]}\n    dividerStyle=\"horizontal\"\n    headerData={{\n      cells: [\n        { key: 'cell-0', id: 'unique-cell-0', children: '20%' },\n        { key: 'cell-1', id: 'unique-cell-1', children: '40%' },\n        { key: 'cell-2', id: 'unique-cell-2', children: '10%' },\n        { key: 'cell-3', id: 'unique-cell-3', children: '30%' },\n      ],\n    }}\n    bodyData={[{\n      rows: createRows(mockData),\n    }]}\n  />\n);\n\nexport default PercentageWidthTable;\n\n")))}s.isMDXComponent=!0;var m=l(49271),p=function(e){var n=e.title,l=e.description,a=e.isExpanded;return t.createElement(m.Z,{title:n||"Percentage Width Table",description:l,example:t.createElement(r.Z,null),exampleSrc:t.createElement(s,null),isExpanded:a})},y=["components"];function h(){return h=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var l=arguments[n];for(var t in l)Object.prototype.hasOwnProperty.call(l,t)&&(e[t]=l[t])}return e},h.apply(this,arguments)}function g(e,n){if(null==e)return{};var l,t,a=function(e,n){if(null==e)return{};var l,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)l=r[t],n.indexOf(l)>=0||(a[l]=e[l]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)l=r[t],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var w={},f="wrapper";function k(e){var n=e.components,l=g(e,y);return(0,a.mdx)(f,h({},w,l,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"terra-table---percentage-width-columns"},"Terra Table - Percentage Width Columns"),(0,a.mdx)("h2",{id:"create-row-and-cell-generation-functions"},"Create Row and Cell Generation Functions"),(0,a.mdx)("p",null,"First we declare our method of creating our rows."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const createRow = rowData => (\n+   {\n+     key: rowData.key,\n+     cells: createCellsForRow(rowData.cells),\n+   }\n+ );\n\n+ const createRows = data => data.map(childItem => createRow(childItem));\n")),(0,a.mdx)("p",null,"Followed by unpacking our cell data into those rows."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const createCell = cell => ({ key: cell.key, children: cell.title });\n\n+ const createCellsForRow = cells => cells.map(cell => createCell(cell));\n")),(0,a.mdx)("p",null,"And then we define the functional component returning our table."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"+ const ScalarWidthTable = () => (\n+   <Table\n+     summaryId=\"example-percentage-table\"\n+     summary=\"This table shows an implementation of percentage width table columns.\"\n+     numberOfColumns={4}\n+     cellPaddingStyle=\"standard\"\n+     headerData={{\n+       cells: [\n+         { key: 'cell-0', id: `unique-cell-0`, children: '20%' },\n+         { key: 'cell-1', id: `unique-cell-1`, children: '40%' },\n+         { key: 'cell-2', id: `unique-cell-2`, children: '10%' },\n+         { key: 'cell-3', id: `unique-cell-3`, children: '30%' },\n+       ],\n+     }}\n+     bodyData={[{\n+       rows: createRows(mockData),\n+     }]}\n+   />\n+ );\n")),(0,a.mdx)("p",null,"Then in order to adjust our columns, we set the ",(0,a.mdx)("inlineCode",{parentName:"p"},"columnWidths")," prop with your appropriate index based width values."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-diff"},"const ScalarWidthTable = () => (\n  <Table\n    summaryId=\"example-percentage-table\"\n    summary=\"This table shows an implementation of percentage width table columns.\"\n    numberOfColumns={4}\n    cellPaddingStyle=\"standard\"\n+   columnWidths={[\n+     { percentage: 20 },\n+     { percentage: 40 },\n+     { percentage: 10 },\n+     { percentage: 30 },\n+   ]}\n    headerData={{\n      cells: [\n        { key: 'cell-0', id: `unique-cell-0`, children: '20%' },\n        { key: 'cell-1', id: `unique-cell-1`, children: '40%' },\n        { key: 'cell-2', id: `unique-cell-2`, children: '10%' },\n        { key: 'cell-3', id: `unique-cell-3`, children: '30%' },\n      ],\n    }}\n    bodyData={[{\n      rows: createRows(mockData),\n    }]}\n  />\n);\n")),(0,a.mdx)("p",null,"Using these steps we get the following example:"),(0,a.mdx)(p,{mdxType:"PercentageWidthTable"}))}k.isMDXComponent=!0}}]);