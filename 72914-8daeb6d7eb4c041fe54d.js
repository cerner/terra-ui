"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[72914],{45325:function(e,t,n){var a=n(64836),r=n(18698);t.Z=void 0;var l=a(n(27424)),d=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=r(e)&&"function"!=typeof e)return{default:e};var n=m(t);if(n&&n.has(e))return n.get(e);var a={__proto__:null},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in e)if("default"!==d&&Object.prototype.hasOwnProperty.call(e,d)){var p=l?Object.getOwnPropertyDescriptor(e,d):null;p&&(p.get||p.set)?Object.defineProperty(a,d,p):a[d]=e[d]}return a.default=e,n&&n.set(e,a),a}(n(67294)),p=a(n(24513));function m(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(m=function(e){return e?n:t})(e)}t.Z=function(){var e=(0,d.useState)(""),t=(0,l.default)(e,2),n=t[0],a=t[1];return d.default.createElement(d.default.Fragment,null,d.default.createElement(p.default,{name:"date-input-value",value:n,onChange:function(e,t){return a(t)},displayFormat:"day-month-year"}),d.default.createElement("p",null,"DateInput Value: ".concat(n)))}},42342:function(e,t,n){var a=n(64836),r=n(18698);t.Z=void 0;var l=a(n(27424)),d=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=r(e)&&"function"!=typeof e)return{default:e};var n=m(t);if(n&&n.has(e))return n.get(e);var a={__proto__:null},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in e)if("default"!==d&&Object.prototype.hasOwnProperty.call(e,d)){var p=l?Object.getOwnPropertyDescriptor(e,d):null;p&&(p.get||p.set)?Object.defineProperty(a,d,p):a[d]=e[d]}return a.default=e,n&&n.set(e,a),a}(n(67294)),p=a(n(24513));function m(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(m=function(e){return e?n:t})(e)}t.Z=function(){var e=(0,d.useState)(""),t=(0,l.default)(e,2),n=t[0],a=t[1];return d.default.createElement(d.default.Fragment,null,d.default.createElement(p.default,{name:"date-input-value",value:n,onChange:function(e,t){return a(t)}}),d.default.createElement("p",null,"DateInput Value: ".concat(n)))}},99170:function(e,t,n){var a=n(64836),r=n(18698);t.Z=void 0;var l=a(n(27424)),d=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=r(e)&&"function"!=typeof e)return{default:e};var n=m(t);if(n&&n.has(e))return n.get(e);var a={__proto__:null},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in e)if("default"!==d&&Object.prototype.hasOwnProperty.call(e,d)){var p=l?Object.getOwnPropertyDescriptor(e,d):null;p&&(p.get||p.set)?Object.defineProperty(a,d,p):a[d]=e[d]}return a.default=e,n&&n.set(e,a),a}(n(67294)),p=a(n(24513));function m(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(m=function(e){return e?n:t})(e)}t.Z=function(){var e=(0,d.useState)(""),t=(0,l.default)(e,2),n=t[0],a=t[1];return d.default.createElement(d.default.Fragment,null,d.default.createElement(p.default,{name:"date-input-value",value:n,onChange:function(e,t){return a(t)},displayFormat:"month-day-year"}),d.default.createElement("p",null,"DateInput Value: ".concat(n)))}},72914:function(e,t,n){n.r(t),n.d(t,{default:function(){return _}});var a=n(67294),r=n(81254),l=n(71464),d=n(78530),p=["components"];function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},m.apply(this,arguments)}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o={},i="wrapper";function s(e){var t=e.components,n=u(e,p);return(0,r.mdx)(i,m({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(d.ZP,{mdxType:"PropsTable"},(0,r.mdx)(d.X2,{key:"ROW1",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"a11yLabel"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"An identifier used by assistive technologies like screen readers to briefly describe this time input to users.\nThe label is not rendered visually."),(0,r.mdx)("p",null,(0,r.mdx)("img",{parentName:"p",src:"https://badgen.net/badge/UX/Accessibility/blue",alt:"IMPORTANT"}),"  ",(0,r.mdx)("strong",{parentName:"p"},"BEST PRACTICE FOR ACCESSIBILITY"),": you ",(0,r.mdx)("em",{parentName:"p"},"SHOULD")," set this to match whatever visible label you give in your UI.\nCurrently this is optional for passivity reasons, but it will become mandatory in a future major version."))),(0,r.mdx)(d.X2,{key:"ROW2",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"name"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(d.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Name of the date input. This name should be unique."))),(0,r.mdx)(d.X2,{key:"ROW3",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"dayAttributes"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"object\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"{}\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Custom input attributes to apply to the day input"))),(0,r.mdx)(d.X2,{key:"ROW4",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"disabled"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"false\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Whether the date input should be disabled."))),(0,r.mdx)(d.X2,{key:"ROW5",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"displayFormat"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'month-day-year'\n  'day-month-year'\n],\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Can be used to set the display format. One of ",(0,r.mdx)("inlineCode",{parentName:"p"},"month-day-year")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"day-month-year"),".\nOverrides default locale display format."))),(0,r.mdx)(d.X2,{key:"ROW6",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"isIncomplete"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Whether the input displays as Incomplete. Use when no value has been provided. ",(0,r.mdx)("em",{parentName:"p"},"(usage note: ",(0,r.mdx)("inlineCode",{parentName:"em"},"required")," must also be set)"),"."))),(0,r.mdx)(d.X2,{key:"ROW7",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"isInvalid"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Whether the input displays as Invalid. Use when value does not meet validation pattern."))),(0,r.mdx)(d.X2,{key:"ROW8",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"monthAttributes"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"object\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"{}\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Custom input attributes to apply to the month select"))),(0,r.mdx)(d.X2,{key:"ROW9",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"onBlur"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"null\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"A callback function to execute when the entire date input component loses focus.\nThis event does not get triggered when the focus is moved from one input to another within the date input component because the focus is still within the main date input component."))),(0,r.mdx)(d.X2,{key:"ROW10",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"onChange"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"null\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"A callback function to execute when a date is entered.\nThe first parameter is the event. The second parameter is the changed date value."))),(0,r.mdx)(d.X2,{key:"ROW11",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"onFocus"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"undefined\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"A callback function triggered when the day, month, or year input receives focus."))),(0,r.mdx)(d.X2,{key:"ROW12",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"refCallback"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"undefined\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Callback ref to access date input containing DOM element."))),(0,r.mdx)(d.X2,{key:"ROW13",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"required"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("p",null,"none")),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Whether is the date input is required"))),(0,r.mdx)(d.X2,{key:"ROW14",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"value"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"undefined\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"An date string representation of the date value used for the component. This should be in ISO 8601 format: YYYY-MM-DD."))),(0,r.mdx)(d.X2,{key:"ROW15",mdxType:"Row"},(0,r.mdx)(d.O,{mdxType:"PropNameCell"},"yearAttributes"),(0,r.mdx)(d.Di,{mdxType:"TypeCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"object\n"))),(0,r.mdx)(d.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,r.mdx)(d.mW,{mdxType:"DefaultValueCell"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"{}\n"))),(0,r.mdx)(d.Ex,{mdxType:"DescriptionCell"},(0,r.mdx)("p",null,"Custom input attributes to apply to the year input")))))}s.isMDXComponent=!0;var c=n(42342),x=["components"];function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},y.apply(this,arguments)}function f(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var g={};function h(e){var t=e.components,n=f(e,x);return(0,r.mdx)("wrapper",y({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\n\nimport DateInput from 'terra-date-input';\n\nconst Example = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <React.Fragment>\n      <DateInput\n        name=\"date-input-value\"\n        value={value}\n        onChange={(event, dateString) => setValue(dateString)}\n      />\n      <p>{`DateInput Value: ${value}`}</p>\n    </React.Fragment>\n  );\n};\n\nexport default Example;\n\n")))}h.isMDXComponent=!0;var v=n(49271),b=function(e){var t=e.title,n=e.description,r=e.isExpanded;return a.createElement(v.Z,{title:t||"Default Date Input",description:n,example:a.createElement(c.Z,null),exampleSrc:a.createElement(h,null),isExpanded:r})},T=n(99170),O=["components"];function N(){return N=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},N.apply(this,arguments)}function C(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var D={};function j(e){var t=e.components,n=C(e,O);return(0,r.mdx)("wrapper",N({},D,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\n\nimport DateInput from 'terra-date-input';\n\nconst Example = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <React.Fragment>\n      <DateInput\n        name=\"date-input-value\"\n        value={value}\n        onChange={(event, dateString) => setValue(dateString)}\n        displayFormat=\"month-day-year\"\n      />\n      <p>{`DateInput Value: ${value}`}</p>\n    </React.Fragment>\n  );\n};\n\nexport default Example;\n\n")))}j.isMDXComponent=!0;var w=function(e){var t=e.title,n=e.description,r=e.isExpanded;return a.createElement(v.Z,{title:t||"Month Day Year Date Input",description:n,example:a.createElement(T.Z,null),exampleSrc:a.createElement(j,null),isExpanded:r})},R=n(45325),S=["components"];function k(){return k=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},k.apply(this,arguments)}function E(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var P={};function I(e){var t=e.components,n=E(e,S);return(0,r.mdx)("wrapper",k({},P,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\n\nimport DateInput from 'terra-date-input';\n\nconst Example = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <React.Fragment>\n      <DateInput\n        name=\"date-input-value\"\n        value={value}\n        onChange={(event, dateString) => setValue(dateString)}\n        displayFormat=\"day-month-year\"\n      />\n      <p>{`DateInput Value: ${value}`}</p>\n    </React.Fragment>\n  );\n};\n\nexport default Example;\n\n")))}I.isMDXComponent=!0;var W=function(e){var t=e.title,n=e.description,r=e.isExpanded;return a.createElement(v.Z,{title:t||"Day Month Year Date Input",description:n,example:a.createElement(R.Z,null),exampleSrc:a.createElement(I,null),isExpanded:r})},q=["components"];function M(){return M=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},M.apply(this,arguments)}function V(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var X={},F="wrapper";function _(e){var t=e.components,n=V(e,q);return(0,r.mdx)(F,M({},X,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)(l.C,{mdxType:"Badge"}),(0,r.mdx)("h1",{id:"terra-date-input"},"Terra Date Input"),(0,r.mdx)("p",null,"The DateInput allows for easy data entry of known dates like birthdays, anniversaries, etc. The display of the DateInput is localized based on the locale but can be customized via the ",(0,r.mdx)("inlineCode",{parentName:"p"},"displayFormat")," prop. The DateInput uses the ISO 8601 format for date values (YYYY-MM-DD)."),(0,r.mdx)("p",null,"Additional functionality for quick date entry is available with specific ",(0,r.mdx)("a",{parentName:"p",href:"/terra-ui/components/cerner-terra-framework-docs/date-input/keyboard-shortcuts"},"keyboard shortcuts"),"."),(0,r.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Install with ",(0,r.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"npm install terra-date-input"))))),(0,r.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,r.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,r.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,r.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,r.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,r.mdx)("h2",{id:"component-features"},"Component Features"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#internationalization-i18n"},"Internationalization Support")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)(b,{title:"Default DateInput",mdxType:"DefaultDateInput"}),(0,r.mdx)(w,{title:"Month Day Year Display Format DateInput",mdxType:"MonthDayYearDateInput"}),(0,r.mdx)(W,{title:"Day Month Year Display Format DateInput",mdxType:"DayMonthYearDateInput"}),(0,r.mdx)("h2",{id:"date-input-props-table"},"Date Input props table"),(0,r.mdx)(s,{mdxType:"DateInputPropsTable"}),(0,r.mdx)("h2",{id:"testing"},"Testing"),(0,r.mdx)("p",null,"Date Input uses ",(0,r.mdx)("inlineCode",{parentName:"p"},"uuid")," which changes the component's description id dynamically. To mock the return value with the Jest testing library, ",(0,r.mdx)("inlineCode",{parentName:"p"},"jest.spyOn")," can be used."),(0,r.mdx)("p",null,"If Enzyme ",(0,r.mdx)("inlineCode",{parentName:"p"},"shallow")," rendering is being used for the tests then the mock may not be required. However, if ",(0,r.mdx)("inlineCode",{parentName:"p"},"mount")," is used then ",(0,r.mdx)("inlineCode",{parentName:"p"},"uuid")," should be mocked as shown below:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"import { v4 as uuidv4 } from 'uuid';\n\nlet mockSpyUuid;\n\n// using a variable may result in failures. For best results, mock return value.\nbeforeAll(() => {\n  mockSpyUuid = jest.spyOn(uuidv4, 'v4').mockReturnValue('00000000-0000-0000-0000-000000000000');\n});\n\n// restore the mock\nafterAll(() => {\n  mockSpyUuid.mockRestore();\n});\n\n")))}_.isMDXComponent=!0}}]);