"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[51297],{82171:function(e,n,t){n.A=void 0;var r=c(t(96540)),a=c(t(11368)),i=c(t(23986)),o=c(t(67967)),l=c(t(19127)),s=c(t(38408));function c(e){return e&&e.__esModule?e:{default:e}}var p=o.default.bind(s.default);n.A=function(){return r.default.createElement("div",null,r.default.createElement("p",null,"Overflow-X Container"),r.default.createElement("div",{className:p("overflow-y-wrapper")},r.default.createElement(a.default,{tabIndex:"0"},r.default.createElement("p",{className:p("paragraph-x-wrapper")},"Entering patient details is a crucial process in healthcare facilities that involves capturing and documenting relevant information about individuals seeking medical care. Patient details need to be regularly updated to ensure accuracy and relevancy. This may involve periodic verification of personal information, updating medical history, and making necessary changes to insurance or contact details. Hospitals may request patients to review and confirm their information during subsequent visits or at designated intervals. Accurate and comprehensive patient details play a vital role in providing effective healthcare. They serve as a foundation for medical assessments, treatment planning, and continuity of care, enabling healthcare providers to deliver personalised and efficient services to patients.Begin filling out the form by entering your personal information. This usually includes your full name, contact details (such as phone number and email address), and residential address. It is crucial to provide accurate contact information as it will be used for communication and verification purposes."),r.default.createElement("div",{className:p("container-x-wrapper")},r.default.createElement(l.default,{inputId:"input-field",label:"Enter Patient Name",type:"text"})),r.default.createElement("div",{className:p("container-x-wrapper")},r.default.createElement(i.default,{text:"Submit"})))))}},94073:function(e,n,t){n.A=void 0;var r=l(t(96540)),a=l(t(11368)),i=l(t(67967)),o=l(t(38408));function l(e){return e&&e.__esModule?e:{default:e}}var s=i.default.bind(o.default);n.A=function(){return r.default.createElement("div",null,r.default.createElement("p",null,"Overflow-Y Container"),r.default.createElement("div",{className:s("overflow-wrapper")},r.default.createElement(a.default,{tabIndex:"0"},r.default.createElement("p",{className:s("paragraph-y-wrapper")},"Entering patient details is a crucial process in healthcare facilities that involves capturing and documenting relevant information about individuals seeking medical care. Patient details need to be regularly updated to ensure accuracy and relevancy. This may involve periodic verification of personal information, updating medical history, and making necessary changes to insurance or contact details. Hospitals may request patients to review and confirm their information during subsequent visits or at designated intervals. Accurate and comprehensive patient details play a vital role in providing effective healthcare. They serve as a foundation for medical assessments, treatment planning, and continuity of care, enabling healthcare providers to deliver personalised and efficient services to patients.Begin filling out the form by entering your personal information. This usually includes your full name, contact details (such as phone number and email address), and residential address. It is crucial to provide accurate contact information as it will be used for communication and verification purposes."))))}},51297:function(e,n,t){t.r(n),t.d(n,{default:function(){return X}});var r=t(96540),a=t(36665),i=t(64190),o=t(94073),l=["components"];function s(){return s=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},s.apply(this,arguments)}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p={};function d(e){var n=e.components,t=c(e,l);return(0,a.mdx)("wrapper",s({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Scroll from 'terra-scroll';\nimport classNames from 'classnames/bind';\nimport styles from './ScrollCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nexport default () => (\n  <div>\n    <p>Overflow-Y Container</p>\n    <div className={cx('overflow-wrapper')}>\n      <Scroll tabIndex=\"0\">\n        <p className={cx('paragraph-y-wrapper')}>\n          Entering patient details is a crucial process in healthcare facilities that involves capturing and documenting relevant information about individuals seeking medical care. Patient details need to be regularly updated to ensure accuracy and relevancy. This may involve periodic verification of personal information, updating medical history, and making necessary changes to insurance or contact details. Hospitals may request patients to review and confirm their information during subsequent visits or at designated intervals. Accurate and comprehensive patient details play a vital role in providing effective healthcare. They serve as a foundation for medical assessments, treatment planning, and continuity of care, enabling healthcare providers to deliver personalised and efficient services to patients.Begin filling out the form by entering your personal information. This usually includes your full name, contact details (such as phone number and email address), and residential address. It is crucial to provide accurate contact information as it will be used for communication and verification purposes.\n        </p>\n      </Scroll>\n    </div>\n  </div>\n);\n\n")))}d.isMDXComponent=!0;var m=t(201),u=["components"];function f(){return f=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},f.apply(this,arguments)}function v(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var h={};function x(e){var n=e.components,t=v(e,u);return(0,a.mdx)("wrapper",f({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-scss"},":local { \n  .overflow-wrapper {\n    border: 1px dashed rgb(0, 0, 0);\n    height: 200px;\n    width: 400px;\n  }\n\n  .overflow-y-wrapper {\n    border: 1px dashed rgb(0, 0, 0);\n    height: auto;\n    width: 400px;\n  }\n\n  .paragraph-x-wrapper {\n    padding-left: 10px;\n    padding-right: 10px;\n    width: 1350px;\n  }\n  \n  .paragraph-y-wrapper {\n    padding-left: 10px;\n    padding-right: 10px;\n    width: 375px;\n  }\n\n  .container-x-wrapper {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n}\n\n")))}x.isMDXComponent=!0;var g=function(e){var n=e.title,t=e.description,a=e.isExpanded;return r.createElement(m.A,{title:n||"Scroll Vertical",description:t,example:r.createElement(o.A,null),exampleCssSrc:r.createElement(x,null),exampleSrc:r.createElement(d,null),isExpanded:a})},y=t(82171),b=["components"];function w(){return w=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},w.apply(this,arguments)}function O(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var N={};function S(e){var n=e.components,t=O(e,b);return(0,a.mdx)("wrapper",w({},N,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Scroll from 'terra-scroll';\nimport Button from 'terra-button';\nimport classNames from 'classnames/bind';\nimport InputField from 'terra-form-input/lib/InputField';\nimport styles from './ScrollCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nexport default () => (\n  <div>\n    <p>Overflow-X Container</p>\n    <div className={cx('overflow-y-wrapper')}>\n      <Scroll tabIndex=\"0\">\n        <p className={cx('paragraph-x-wrapper')}>\n          Entering patient details is a crucial process in healthcare facilities that involves capturing and documenting relevant information about individuals seeking medical care. Patient details need to be regularly updated to ensure accuracy and relevancy. This may involve periodic verification of personal information, updating medical history, and making necessary changes to insurance or contact details. Hospitals may request patients to review and confirm their information during subsequent visits or at designated intervals. Accurate and comprehensive patient details play a vital role in providing effective healthcare. They serve as a foundation for medical assessments, treatment planning, and continuity of care, enabling healthcare providers to deliver personalised and efficient services to patients.Begin filling out the form by entering your personal information. This usually includes your full name, contact details (such as phone number and email address), and residential address. It is crucial to provide accurate contact information as it will be used for communication and verification purposes.\n        </p>\n        <div className={cx('container-x-wrapper')}>\n          <InputField\n            inputId=\"input-field\"\n            label=\"Enter Patient Name\"\n            type=\"text\"\n          />\n        </div>\n        <div className={cx('container-x-wrapper')}>\n          <Button text=\"Submit\" />\n        </div>\n      </Scroll>\n    </div>\n  </div>\n);\n\n")))}S.isMDXComponent=!0;var T=function(e){var n=e.title,t=e.description,a=e.isExpanded;return r.createElement(m.A,{title:n||"Scroll Horizontal",description:t,example:r.createElement(y.A,null),exampleCssSrc:r.createElement(x,null),exampleSrc:r.createElement(S,null),isExpanded:a})},j=t(12883),E=["components"];function C(){return C=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},C.apply(this,arguments)}function _(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var P={},k="wrapper";function I(e){var n=e.components,t=_(e,E);return(0,a.mdx)(k,C({},P,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)(j.Ay,{mdxType:"PropsTable"},(0,a.mdx)(j.fI,{key:"ROW1",mdxType:"Row"},(0,a.mdx)(j.dt,{mdxType:"PropNameCell"},"children"),(0,a.mdx)(j.$d,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"node\n"))),(0,a.mdx)(j.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(j.NZ,{mdxType:"DefaultValueCell"},(0,a.mdx)("p",null,"none")),(0,a.mdx)(j.Hd,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"The child content to present in the scrollable region."))),(0,a.mdx)(j.fI,{key:"ROW2",mdxType:"Row"},(0,a.mdx)(j.dt,{mdxType:"PropNameCell"},"refCallback"),(0,a.mdx)(j.$d,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"func\n"))),(0,a.mdx)(j.YZ,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(j.NZ,{mdxType:"DefaultValueCell"},(0,a.mdx)("p",null,"none")),(0,a.mdx)(j.Hd,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"Function callback for the ref of the scrollable container.")))))}I.isMDXComponent=!0;var D=["components"];function A(){return A=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},A.apply(this,arguments)}function q(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var M={},R="wrapper";function X(e){var n=e.components,t=q(e,D);return(0,a.mdx)(R,A({},M,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)(i.E,{mdxType:"Badge"}),(0,a.mdx)("h1",{id:"terra-scroll"},"Terra Scroll"),(0,a.mdx)("p",null,"The terra-scroll is a content view that hides data accessible with scrolling and provides a refCallback. The expectation is that any consumer needing to provide a scrollable area within their implementation should be using this component, or one of our other terra components that implements Scroll."),(0,a.mdx)("p",null,"Scroll provides a menthod to access the node managing scrolling, so values such as scrollTop can be easily set, as well as the correct prefixes to consistently sytle scrolling across supported browsers."),(0,a.mdx)("p",null,"The terra-scroll expands to fill it's parent container, so parent nodes are expected to have an explicit height set."),(0,a.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Install with ",(0,a.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"npm install terra-scroll"))))),(0,a.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,a.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,a.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"react"),(0,a.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,a.mdx)("td",{parentName:"tr",align:null},"^16.8.5")))),(0,a.mdx)("h2",{id:"usage"},"Usage"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"import Scroll from 'terra-scroll';\n")),(0,a.mdx)("h2",{id:"component-features"},"Component Features"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support"))),(0,a.mdx)("h2",{id:"examples"},"Examples"),(0,a.mdx)(g,{title:"Vertical Scroll",mdxType:"ScrollVertical"}),(0,a.mdx)(T,{title:"Horizontal Scroll",mdxType:"ScrollHorizontal"}),(0,a.mdx)("h2",{id:"scroll-props"},"Scroll Props"),(0,a.mdx)(I,{mdxType:"ScrollPropsTable"}))}X.isMDXComponent=!0},64190:function(e,n,t){t.d(n,{E:function(){return i}});var r=t(96540),a=t(55713),i=function(e){var n=e.url;return r.createElement(a.A,{src:"https://github.com/cerner/terra-core/tree/main/packages/terra-scroll",name:"terra-scroll",version:"2.37.0",url:n})}},38408:function(e,n,t){t.r(n),n.default={"overflow-wrapper":"ScrollCommon-module__overflow-wrapper___D23RF","overflow-y-wrapper":"ScrollCommon-module__overflow-y-wrapper___eFj49","paragraph-x-wrapper":"ScrollCommon-module__paragraph-x-wrapper___WhEHE","paragraph-y-wrapper":"ScrollCommon-module__paragraph-y-wrapper___pnx9j","container-x-wrapper":"ScrollCommon-module__container-x-wrapper___w5sBE"}}}]);