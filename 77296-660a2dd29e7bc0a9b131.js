"use strict";(self.webpackChunkterra_ui=self.webpackChunkterra_ui||[]).push([[77296],{77296:function(e,l,t){t.r(l),t.d(l,{default:function(){return M}});var a=t(67294),n=t(81254),r=t(26372),m=t(18922),s=["components"];function d(){return d=Object.assign?Object.assign.bind():function(e){for(var l=1;l<arguments.length;l++){var t=arguments[l];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},d.apply(this,arguments)}function i(e,l){if(null==e)return{};var t,a,n=function(e,l){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||(n[t]=e[t]);return n}(e,l);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o={};function u(e){var l=e.components,t=i(e,s);return(0,n.mdx)("wrapper",d({},o,t,{components:l,mdxType:"MDXLayout"}),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\n\nexport default () => <ResultNameHeaderCell resultName=\"Blood Pressure\" unit=\"mmHg\" />;\n\n")))}u.isMDXComponent=!0;var c=t(49271),p=function(e){var l=e.title,t=e.description,n=e.isExpanded;return a.createElement(c.Z,{title:l||"Result Name Header Cell",description:t,example:a.createElement(m.Z,null),exampleSrc:a.createElement(u,null),isExpanded:n})},x=t(17093),f=["components"];function N(){return N=Object.assign?Object.assign.bind():function(e){for(var l=1;l<arguments.length;l++){var t=arguments[l];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},N.apply(this,arguments)}function y(e,l){if(null==e)return{};var t,a,n=function(e,l){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||(n[t]=e[t]);return n}(e,l);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var g={};function h(e){var l=e.components,t=y(e,f);return(0,n.mdx)("wrapper",N({},g,t,{components:l,mdxType:"MDXLayout"}),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-jsx"},'import React from \'react\';\nimport { ResultNameHeaderCell } from \'terra-clinical-result/lib\';\nimport classNames from \'classnames\';\nimport classNamesBind from \'classnames/bind\';\nimport ThemeContext from \'terra-theme-context\';\nimport styles from \'../Examples.module.scss\';\n\nconst cx = classNamesBind.bind(styles);\n\nconst ResultNameColumnFlowsheetExample = () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      \'mock-flowsheet-example\',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx(\'mock-flowsheet-firstcolumn\')}>\n        <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n          <ResultNameHeaderCell resultName="Temp" fullResultName="Temperature" unit="degC" fullUnit="Degrees Celsius" />\n        </div>\n        <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n          <ResultNameHeaderCell resultName="HR" unit="bpm" fullUnit="beats per minute" />\n        </div>\n        <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n          <ResultNameHeaderCell resultName="BP" unit="mmHg" />\n        </div>\n        <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n          <ResultNameHeaderCell resultName="Mean Arterial Pressure, Cuff" unit="mmHg" typeIndicator="calculated" />\n        </div>\n        <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n          <ResultNameHeaderCell resultName="Respiratory Rate" unit="br/min" />\n        </div>\n        <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n          <ResultNameHeaderCell resultName="SpO2" unit="%" />\n        </div>\n        <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n          <ResultNameHeaderCell resultName="Height/Length Dosing" unit="cm" />\n        </div>\n        <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n          <ResultNameHeaderCell resultName="Height/Length Measured" unit="cm" />\n        </div>\n        <div className={cx(\'mock-flowsheet-firstcolumn-cell\')}>\n          <ResultNameHeaderCell resultName="Weight Dosing" unit="kg" />\n        </div>\n        <div className={cx([\'mock-flowsheet-firstcolumn-cell\', \'zebra\'])}>\n          <ResultNameHeaderCell resultName="Weight Measured" unit="kg" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultNameColumnFlowsheetExample;\n\n')))}h.isMDXComponent=!0;var C=t(98568),v=function(e){var l=e.title,t=e.description,n=e.isExpanded;return a.createElement(c.Z,{title:l||"Result Name Header Flowsheet Example",description:t,example:a.createElement(x.Z,null),exampleCssSrc:a.createElement(C.Z,null),exampleSrc:a.createElement(h,null),isExpanded:n})},b=t(78530),R=["components"];function w(){return w=Object.assign?Object.assign.bind():function(e){for(var l=1;l<arguments.length;l++){var t=arguments[l];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},w.apply(this,arguments)}function O(e,l){if(null==e)return{};var t,a,n=function(e,l){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||(n[t]=e[t]);return n}(e,l);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var T={},E="wrapper";function k(e){var l=e.components,t=O(e,R);return(0,n.mdx)(E,w({},T,t,{components:l,mdxType:"MDXLayout"}),(0,n.mdx)(b.ZP,{mdxType:"PropsTable"},(0,n.mdx)(b.X2,{key:"ROW1",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"resultName"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,n.mdx)(b.dS,{isRequired:!0,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("p",null,"none")),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"Content to be displayed for the Result Name row label."))),(0,n.mdx)(b.X2,{key:"ROW2",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"unit"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,n.mdx)(b.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("p",null,"none")),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"Content to be displayed as the supporting Unit of Measure row label."))),(0,n.mdx)(b.X2,{key:"ROW3",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"fullResultName"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,n.mdx)(b.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("p",null,"none")),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"Full name of the displayed Result Name for accessibility tooling's usage, e.g. ",(0,n.mdx)("inlineCode",{parentName:"p"},"'Temperature'"),"."))),(0,n.mdx)(b.X2,{key:"ROW4",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"fullUnit"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"string\n"))),(0,n.mdx)(b.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("p",null,"none")),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"Full name of the displayed Unit of Measure for accessibility tooling's usage, e.g. ",(0,n.mdx)("inlineCode",{parentName:"p"},"'Degrees Celsius'"),"."))),(0,n.mdx)(b.X2,{key:"ROW5",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"paddingStyle"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'none'\n  'compact'\n  'standard'\n],\n"))),(0,n.mdx)(b.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"'compact'\n"))),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"The padding styling to apply to the Result Name row header cell.\nOne of ",(0,n.mdx)("inlineCode",{parentName:"p"},"'none'"),", ",(0,n.mdx)("inlineCode",{parentName:"p"},"'compact'"),", or ",(0,n.mdx)("inlineCode",{parentName:"p"},"'standard'"),"."))),(0,n.mdx)(b.X2,{key:"ROW6",mdxType:"Row"},(0,n.mdx)(b.O,{mdxType:"PropNameCell"},"typeIndicator"),(0,n.mdx)(b.Di,{mdxType:"TypeCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'none'\n  'calculated'\n],\n"))),(0,n.mdx)(b.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,n.mdx)(b.mW,{mdxType:"DefaultValueCell"},(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-javascript"},"'none'\n"))),(0,n.mdx)(b.Ex,{mdxType:"DescriptionCell"},(0,n.mdx)("p",null,"Adds additional icon at beginning of row before the ResultName, indicating special information about results or cells.\nOne of ",(0,n.mdx)("inlineCode",{parentName:"p"},"'none'")," or ",(0,n.mdx)("inlineCode",{parentName:"p"},"'calculated'"),".")))))}k.isMDXComponent=!0;var H=["components"];function j(){return j=Object.assign?Object.assign.bind():function(e){for(var l=1;l<arguments.length;l++){var t=arguments[l];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},j.apply(this,arguments)}function D(e,l){if(null==e)return{};var t,a,n=function(e,l){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||(n[t]=e[t]);return n}(e,l);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var P={},S="wrapper";function M(e){var l=e.components,t=D(e,H);return(0,n.mdx)(S,j({},P,t,{components:l,mdxType:"MDXLayout"}),(0,n.mdx)(r.C,{mdxType:"Badge"}),(0,n.mdx)("h1",{id:"result-name-header-cell"},"Result Name Header Cell"),(0,n.mdx)("p",null,"Result-Name-Header-Cell is a component of terra-clinical-result that creates a standardized view for the Result Name and Unit of Measure in the first column (row header) for each row within a flowsheet."),(0,n.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},"Install with ",(0,n.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("inlineCode",{parentName:"li"},"npm install terra-clinical-result"))))),(0,n.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,n.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,n.mdx)("table",null,(0,n.mdx)("thead",{parentName:"table"},(0,n.mdx)("tr",{parentName:"thead"},(0,n.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,n.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,n.mdx)("tbody",{parentName:"table"},(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"react"),(0,n.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,n.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,n.mdx)("tr",{parentName:"tbody"},(0,n.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,n.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,n.mdx)("h2",{id:"usage"},"Usage"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\n")),(0,n.mdx)("h2",{id:"examples"},"Examples"),(0,n.mdx)(p,{mdxType:"Default"}),(0,n.mdx)(v,{title:"Result Name Header Cells in Sample Flowsheet",mdxType:"FlowsheetExample"}),(0,n.mdx)("h2",{id:"result-name-header-cell-props"},"Result Name Header Cell Props"),(0,n.mdx)(k,{mdxType:"ResultNameHeaderProps"}))}M.isMDXComponent=!0},18922:function(e,l,t){l.Z=void 0;var a,n=(a=t(67294))&&a.__esModule?a:{default:a},r=t(33671);l.Z=function(){return n.default.createElement(r.ResultNameHeaderCell,{resultName:"Blood Pressure",unit:"mmHg"})}},17093:function(e,l,t){l.Z=void 0;var a=i(t(67294)),n=t(33671),r=i(t(94184)),m=i(t(47166)),s=i(t(50026)),d=i(t(62547));function i(e){return e&&e.__esModule?e:{default:e}}var o=m.default.bind(d.default),u=function(){var e=a.default.useContext(s.default),l=(0,r.default)(o("mock-flowsheet-example",e.className));return a.default.createElement("div",{className:l},a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn")},a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn-cell")},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Temp",fullResultName:"Temperature",unit:"degC",fullUnit:"Degrees Celsius"})),a.default.createElement("div",{className:o(["mock-flowsheet-firstcolumn-cell","zebra"])},a.default.createElement(n.ResultNameHeaderCell,{resultName:"HR",unit:"bpm",fullUnit:"beats per minute"})),a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn-cell")},a.default.createElement(n.ResultNameHeaderCell,{resultName:"BP",unit:"mmHg"})),a.default.createElement("div",{className:o(["mock-flowsheet-firstcolumn-cell","zebra"])},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Mean Arterial Pressure, Cuff",unit:"mmHg",typeIndicator:"calculated"})),a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn-cell")},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Respiratory Rate",unit:"br/min"})),a.default.createElement("div",{className:o(["mock-flowsheet-firstcolumn-cell","zebra"])},a.default.createElement(n.ResultNameHeaderCell,{resultName:"SpO2",unit:"%"})),a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn-cell")},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Height/Length Dosing",unit:"cm"})),a.default.createElement("div",{className:o(["mock-flowsheet-firstcolumn-cell","zebra"])},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Height/Length Measured",unit:"cm"})),a.default.createElement("div",{className:o("mock-flowsheet-firstcolumn-cell")},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Weight Dosing",unit:"kg"})),a.default.createElement("div",{className:o(["mock-flowsheet-firstcolumn-cell","zebra"])},a.default.createElement(n.ResultNameHeaderCell,{resultName:"Weight Measured",unit:"kg"}))))};l.Z=u}}]);